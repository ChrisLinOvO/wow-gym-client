{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Project-traning/project-wow-fit-fronted/src/pages/employee-form-page/EmployeeFormPage.jsx\";\nimport React, { useState } from \"react\";\nimport \"./EmployeeFormPage.scss\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentEmployeeSelect } from \"../../redux/employee/employee-selector\";\nimport Swal from 'sweetalert2';\nimport EmployeeFormInput from \"../../component/employee-from-input/EmployeeFormInput\";\nimport EmployeeFormRadio from \"../../component/employee-form-checkbox/EmployeeFormRadio\";\nimport MyTextarea from \"../../component/employee-form-textarea/EmployeeFormTextarea\";\n\nfunction EmployeeForm({\n  currentEmployee,\n  history\n}) {\n  const [course, setCourse] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [hour, setHour] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [explanation, setExplanation] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [quota, setQuota] = useState(\"\");\n  let categoryId = \"\";\n\n  switch (category) {\n    case \"有氧教室\":\n      categoryId = 2;\n      break;\n\n    case \"瑜伽教室\":\n      categoryId = 3;\n      break;\n\n    default:\n      categoryId = 8;\n      break;\n  } // console.log(file);\n\n\n  async function handleSubmit() {\n    const row = {\n      staffId: currentEmployee.Eid,\n      courseCategoryId: categoryId,\n      courseName: course,\n      categoryName: category,\n      courseImg: file,\n      courseIntroduce: explanation,\n      courseTime: time,\n      courseHour: hour,\n      numberOfCourse: 0,\n      courseQuoda: quota\n    };\n    const request = new Request(\"http://localhost:5000/api/courses\", {\n      method: \"POST\",\n      body: JSON.stringify(row),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    });\n    const response = await fetch(request);\n    await response.json(); // console.log(data);\n    // alert(\"課程上傳成功\");\n    // window.location.reload();\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeFormInput, {\n    title: \"課程名稱：\",\n    type: \"text\",\n    placeholder: \"請輸入課程名稱\",\n    value: course,\n    onChange: event => {\n      setCourse(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(EmployeeFormInput, {\n    title: \"開課時間：\",\n    type: \"datetime-local\",\n    value: time,\n    onChange: event => {\n      setTime(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(EmployeeFormInput, {\n    title: \"課程時數：\",\n    type: \"number\",\n    placeholder: \"請選擇課程總時數\",\n    value: hour,\n    onChange: event => {\n      setHour(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(EmployeeFormInput, {\n    title: \"課程名額：\",\n    type: \"number\",\n    placeholder: \"請選擇課程上限名額\",\n    value: quota,\n    onChange: event => {\n      setQuota(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MyTextarea, {\n    title: \"課程說明：\",\n    placeholder: \"請詳述課程介紹\",\n    value: explanation,\n    onChange: event => {\n      setExplanation(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"\\u8AB2\\u7A0B\\u5206\\u985E\\uFF1A\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"category-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeFormRadio, {\n    title: \"有氧教室\",\n    value: category,\n    onClick: () => {\n      setCategory(\"有氧教室\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EmployeeFormRadio, {\n    title: \"瑜伽教室\",\n    value: category,\n    onClick: () => {\n      setCategory(\"瑜伽教室\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EmployeeFormRadio, {\n    title: \"飛輪教室\",\n    value: category,\n    onClick: () => {\n      setCategory(\"飛輪教室\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(EmployeeFormInput, {\n    title: \"課程圖片：\",\n    type: \"file\",\n    accept: \".jpg,.png\",\n    onChange: event => {\n      let input = event.target.files[0];\n      let reader = new FileReader();\n\n      reader.onload = function () {\n        let dataURL = reader.result;\n        setFile(dataURL);\n      };\n\n      reader.readAsDataURL(input);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"file-img\",\n    alt: \"\",\n    src: file,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit\",\n    type: \"button\",\n    onClick: () => {\n      Swal.fire({\n        title: '新增課程',\n        text: \"確認欄位已都填寫!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: '確定',\n        cancelButtonText: '取消'\n      }).then(result => {\n        if (result.value) {\n          Swal.fire('完成!', '已新增課程!!', 'success').then(() => {\n            if (result.value) {\n              history.push(`employeecenter/${currentEmployee.Eid}`);\n            }\n          });\n          handleSubmit();\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, \"\\u9001\\u51FA\"))));\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentEmployee: currentEmployeeSelect\n});\nexport default withRouter(connect(mapStateToProps)(EmployeeForm));","map":{"version":3,"sources":["/Users/Chris/Project-traning/project-wow-fit-fronted/src/pages/employee-form-page/EmployeeFormPage.jsx"],"names":["React","useState","connect","withRouter","createStructuredSelector","currentEmployeeSelect","Swal","EmployeeFormInput","EmployeeFormRadio","MyTextarea","EmployeeForm","currentEmployee","history","course","setCourse","time","setTime","hour","setHour","file","setFile","explanation","setExplanation","category","setCategory","quota","setQuota","categoryId","handleSubmit","row","staffId","Eid","courseCategoryId","courseName","categoryName","courseImg","courseIntroduce","courseTime","courseHour","numberOfCourse","courseQuoda","request","Request","method","body","JSON","stringify","headers","Headers","Accept","response","fetch","json","event","target","value","input","files","reader","FileReader","onload","dataURL","result","readAsDataURL","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","push","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./EmployeeFormPage.scss\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentEmployeeSelect } from \"../../redux/employee/employee-selector\";\nimport Swal from 'sweetalert2';\n\nimport EmployeeFormInput from \"../../component/employee-from-input/EmployeeFormInput\";\nimport EmployeeFormRadio from \"../../component/employee-form-checkbox/EmployeeFormRadio\";\nimport MyTextarea from \"../../component/employee-form-textarea/EmployeeFormTextarea\";\n\nfunction EmployeeForm({ currentEmployee ,history}) {\n  const [course, setCourse] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [hour, setHour] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [explanation, setExplanation] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [quota, setQuota] = useState(\"\");\n\n  let categoryId = \"\";\n  switch (category) {\n    case \"有氧教室\":\n      categoryId = 2;\n      break;\n    case \"瑜伽教室\":\n      categoryId = 3;\n      break;\n    default:\n      categoryId = 8;\n      break;\n  }\n\n  // console.log(file);\n\n  async function handleSubmit() {\n    const row = {\n      staffId: currentEmployee.Eid,\n      courseCategoryId: categoryId,\n      courseName: course,\n      categoryName: category,\n      courseImg: file,\n      courseIntroduce: explanation,\n      courseTime: time,\n      courseHour: hour,\n      numberOfCourse: 0,\n      courseQuoda: quota,\n    };\n\n    const request = new Request(\"http://localhost:5000/api/courses\", {\n      method: \"POST\",\n      body: JSON.stringify(row),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      }),\n    });\n\n    const response = await fetch(request);\n    await response.json();\n    // console.log(data);\n\n    // alert(\"課程上傳成功\");\n    // window.location.reload();\n  }\n\n  return (\n    <>\n      <form className=\"form-box\">\n        <EmployeeFormInput\n          title={\"課程名稱：\"}\n          type={\"text\"}\n          placeholder={\"請輸入課程名稱\"}\n          value={course}\n          onChange={(event) => {\n            setCourse(event.target.value);\n          }}\n        />\n        <EmployeeFormInput\n          title={\"開課時間：\"}\n          type={\"datetime-local\"}\n          value={time}\n          onChange={(event) => {\n            setTime(event.target.value);\n          }}\n        />\n        <EmployeeFormInput\n          title={\"課程時數：\"}\n          type={\"number\"}\n          placeholder={\"請選擇課程總時數\"}\n          value={hour}\n          onChange={(event) => {\n            setHour(event.target.value);\n          }}\n        />\n        <EmployeeFormInput\n          title={\"課程名額：\"}\n          type={\"number\"}\n          placeholder={\"請選擇課程上限名額\"}\n          value={quota}\n          onChange={(event) => {\n            setQuota(event.target.value);\n          }}\n        />\n        <MyTextarea\n          title={\"課程說明：\"}\n          placeholder={\"請詳述課程介紹\"}\n          value={explanation}\n          onChange={(event) => {\n            setExplanation(event.target.value);\n          }}\n        />\n        <label className=\"label-category\">\n          課程分類：\n          <span className=\"category-box\">\n            <EmployeeFormRadio\n              title={\"有氧教室\"}\n              value={category}\n              onClick={() => {\n                setCategory(\"有氧教室\");\n              }}\n            />\n            <EmployeeFormRadio\n              title={\"瑜伽教室\"}\n              value={category}\n              onClick={() => {\n                setCategory(\"瑜伽教室\");\n              }}\n            />\n            <EmployeeFormRadio\n              title={\"飛輪教室\"}\n              value={category}\n              onClick={() => {\n                setCategory(\"飛輪教室\");\n              }}\n            />\n          </span>\n        </label>\n        <EmployeeFormInput\n          title={\"課程圖片：\"}\n          type={\"file\"}\n          accept=\".jpg,.png\"\n          onChange={(event) => {\n            let input = event.target.files[0];\n            let reader = new FileReader();\n            reader.onload = function () {\n              let dataURL = reader.result;\n              setFile(dataURL);\n            };\n            reader.readAsDataURL(input);\n          }}\n        />\n        <div className=\"file-box\">\n          <img className=\"file-img\" alt=\"\" src={file} />\n        </div>\n\n        <div>\n          <button\n            className=\"submit\"\n            type=\"button\"\n            onClick={() => {\n              Swal.fire({\n                    title: '新增課程',\n                    text: \"確認欄位已都填寫!\",\n                    icon: 'warning',\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    cancelButtonColor: '#d33',\n                    confirmButtonText: '確定',\n                    cancelButtonText: '取消'\n                  }).then((result) => {\n                    if (result.value) {\n                      Swal.fire(\n                        '完成!',\n                        '已新增課程!!',\n                        'success'\n                      ).then(() => {\n                        if (result.value) {\n                          history.push(`employeecenter/${currentEmployee.Eid}`);\n                        }\n                      })\n                      handleSubmit();\n                    \n                    }\n                  })\n            }}\n          >\n            送出\n          </button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentEmployee: currentEmployeeSelect,\n});\n\nexport default withRouter(connect(mapStateToProps)(EmployeeForm));\n"]},"metadata":{},"sourceType":"module"}
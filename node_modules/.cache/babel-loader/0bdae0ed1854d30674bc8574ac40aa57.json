{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Project-traning/project-wow-fit-fronted/src/component/user-my-courses/UserMyCourses.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport UserCourseUpdateBtn from \"../../component/user-course-update-btn/UserCourseUpdateBtn\";\nimport \"./UserMyCourses.scss\";\nimport Swal from \"sweetalert2\"; //---------------\n\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentUserSelect } from \"../../redux/user/user-selector\"; //---------------\n\nfunction UserMyCourses(props) {\n  // //---------------\n  const {\n    currentUser\n  } = props; // //該使用者的id\n  // const currentUserId = currentUser ? currentUser.id : ''\n  // //---------------\n  // console.log(props.userCourse)\n\n  const [userBooking, setUserBooking] = useState([]);\n  const T = props.userCourse.courseTime;\n  const newD = T.split(\"T\")[0];\n  const newT = props.userCourse.courseTime3.split(\" \")[3]; //轉換時間格式比較先後\n\n  const newTime = new Date(T).getTime();\n  const nowTime = Date.now(); //彈跳視窗的時間格式\n\n  const jumpT = T.split(\"T\"); // console.log(jumpT)\n\n  const jumpT2 = jumpT[1].split(\".\")[0]; // console.log(jumpT2)\n  //會員的預約編號\n\n  const userBookingId = props.userCourse.courseBookingId; //該課程id\n\n  const thisCourseId = props.userCourse.courseId; // console.log(props.userCourse)\n\n  async function userCancelBooking() {\n    const updateBookingJson = {\n      bookingState: 0\n    };\n    const request = new Request(`http://localhost:5000/api/courses/bookingData/${userBookingId}`, {\n      method: 'POST',\n      body: JSON.stringify(updateBookingJson),\n      headers: new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      })\n    });\n    await fetch(request);\n    setUserBooking(''); //取消預約後減少預約人數\n\n    const reduceNumJson = {\n      courseId: thisCourseId\n    };\n    const req = new Request(`http://localhost:5000/api/courses/data`, {\n      method: 'POST',\n      body: JSON.stringify(reduceNumJson),\n      headers: new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      })\n    });\n    await fetch(req);\n  } // console.log(props.userCourseId)\n  //判斷此課程的預約狀況\n\n\n  const getThisBookingState = props.userBooking && props.userBooking.filter(i => i.courseId === props.userCourseId).map(p => p.bookingState); // console.log(getThisBookingState)\n\n  function userConfirmUpdateBooking(userCancelBooking) {\n    if (currentUser !== '') {\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: 'popupBtn confirmBtn',\n          cancelButton: 'popupBtn cancelBtn'\n        },\n        buttonsStyling: false\n      });\n      swalWithBootstrapButtons.fire({\n        title: `取消課程：${props.userCourse.courseName}`,\n        html: `<h2>課程時間：${jumpT[0] + ' ' + jumpT2}</h2><br />取消後無法再次預約，確定取消嗎？`,\n        icon: 'question',\n        showCancelButton: true,\n        cancelButtonText: '不取消了',\n        confirmButtonText: '確定取消',\n        reverseButtons: true,\n        customClass: {\n          confirmButton: 'popupBtn confirmBtn',\n          cancelButton: 'popupBtn cancelBtn'\n        }\n      }).then(result => {\n        if (result.value) {\n          swalWithBootstrapButtons.fire('取消成功!', '期待在其他課程與你相見', 'success');\n          userCancelBooking();\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n          swalWithBootstrapButtons.fire('太好了!', '記得來上課喔～');\n        }\n      });\n    } else {\n      Swal.fire({\n        icon: 'warning',\n        title: '請先登入會員'\n      }).then(() => {\n        props.history.push('/login');\n      });\n    }\n  } //課程彈跳視窗\n\n\n  function showCJumpWindow() {\n    Swal.fire({\n      width: 800,\n      title: props.userCourse.courseName,\n      imageUrl: props.userCourse.courseImg,\n      imageWidth: 400,\n      imageHeight: 300,\n      text: props.userCourse.courseIntroduce\n    });\n  } //教練彈跳視窗\n\n\n  function showEJumpWindow() {\n    Swal.fire({\n      width: 800,\n      title: props.userCourse.Ename,\n      imageUrl: props.userCourse.Eimg,\n      imageWidth: 400,\n      html: `<h4>證照：</h4></br>${props.userCourse.Elicense}<br/><br/><h4>專長：</h4></br>${props.userCourse.Eexpertise}`\n    });\n  }\n\n  useEffect(() => {\n    props.getCoursesDataInAllUser();\n    props.getUserBooking();\n  }, [userBooking]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"userCoursesInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"courseDayInUser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, newD), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"courseTimeInUser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, newT), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"courseNameInUser\",\n    onClick: () => showCJumpWindow(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, props.userCourse.courseName), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"courseCategoryInUser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, props.userCourse.categoryName), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"coachNameInUser\",\n    onClick: () => showEJumpWindow(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, props.userCourse.Ename), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"userCourseBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(UserCourseUpdateBtn, {\n    userBookingId: userBookingId,\n    userConfirmUpdateBooking: userConfirmUpdateBooking,\n    userCancelBooking: userCancelBooking,\n    getThisBookingState: getThisBookingState,\n    choose: props.choose,\n    filterCoursesOfData: props.filterCoursesOfData,\n    userCourseId: props.userCourseId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  })))));\n} //---------------\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: currentUserSelect\n});\nexport default withRouter(connect(mapStateToProps)(UserMyCourses)); //---------------","map":{"version":3,"sources":["/Users/Chris/Project-traning/project-wow-fit-fronted/src/component/user-my-courses/UserMyCourses.jsx"],"names":["React","useState","useEffect","UserCourseUpdateBtn","Swal","connect","withRouter","createStructuredSelector","currentUserSelect","UserMyCourses","props","currentUser","userBooking","setUserBooking","T","userCourse","courseTime","newD","split","newT","courseTime3","newTime","Date","getTime","nowTime","now","jumpT","jumpT2","userBookingId","courseBookingId","thisCourseId","courseId","userCancelBooking","updateBookingJson","bookingState","request","Request","method","body","JSON","stringify","headers","Headers","fetch","reduceNumJson","req","getThisBookingState","filter","i","userCourseId","map","p","userConfirmUpdateBooking","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","courseName","html","icon","showCancelButton","cancelButtonText","confirmButtonText","reverseButtons","then","result","value","dismiss","DismissReason","cancel","history","push","showCJumpWindow","width","imageUrl","courseImg","imageWidth","imageHeight","text","courseIntroduce","showEJumpWindow","Ename","Eimg","Elicense","Eexpertise","getCoursesDataInAllUser","getUserBooking","categoryName","choose","filterCoursesOfData","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport UserCourseUpdateBtn from \"../../component/user-course-update-btn/UserCourseUpdateBtn\"\nimport \"./UserMyCourses.scss\"\nimport Swal from \"sweetalert2\";\n//---------------\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentUserSelect } from \"../../redux/user/user-selector\";\n//---------------\n\n\nfunction UserMyCourses(props) {\n    // //---------------\n    const { currentUser } = props\n    // //該使用者的id\n    // const currentUserId = currentUser ? currentUser.id : ''\n    // //---------------\n    // console.log(props.userCourse)\n    const [userBooking, setUserBooking] = useState([])\n\n    const T = props.userCourse.courseTime\n    const newD = T.split(\"T\")[0]\n    const newT = props.userCourse.courseTime3.split(\" \")[3]\n\n    //轉換時間格式比較先後\n    const newTime = new Date(T).getTime()\n    const nowTime = Date.now()\n\n    //彈跳視窗的時間格式\n    const jumpT = T.split(\"T\")\n    // console.log(jumpT)\n    const jumpT2 = jumpT[1].split(\".\")[0]\n    // console.log(jumpT2)\n\n    //會員的預約編號\n    const userBookingId = props.userCourse.courseBookingId\n    //該課程id\n    const thisCourseId = props.userCourse.courseId\n    // console.log(props.userCourse)\n\n    async function userCancelBooking() {\n        const updateBookingJson = {\n            bookingState: 0\n        }\n        const request = new Request(`http://localhost:5000/api/courses/bookingData/${userBookingId}`, {\n            method: 'POST',\n            body: JSON.stringify(updateBookingJson),\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }),\n        })\n        await fetch(request)\n        setUserBooking('')\n\n        //取消預約後減少預約人數\n        const reduceNumJson = {\n            courseId: thisCourseId,\n        }\n        const req = new Request(`http://localhost:5000/api/courses/data`, {\n            method: 'POST',\n            body: JSON.stringify(reduceNumJson),\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }),\n        })\n        await fetch(req)\n    }\n\n    // console.log(props.userCourseId)\n    //判斷此課程的預約狀況\n    const getThisBookingState = props.userBooking && props.userBooking.filter(i => i.courseId === props.userCourseId).map(p => p.bookingState)\n\n    // console.log(getThisBookingState)\n\n    function userConfirmUpdateBooking(userCancelBooking) {\n        if (currentUser !== '') {\n            const swalWithBootstrapButtons = Swal.mixin({\n                customClass: {\n                    confirmButton: 'popupBtn confirmBtn',\n                    cancelButton: 'popupBtn cancelBtn'\n                },\n                buttonsStyling: false\n            })\n            swalWithBootstrapButtons.fire({\n                title: `取消課程：${props.userCourse.courseName}`,\n                html: `<h2>課程時間：${jumpT[0] + ' ' + jumpT2}</h2><br />取消後無法再次預約，確定取消嗎？`,\n                icon: 'question',\n                showCancelButton: true,\n                cancelButtonText: '不取消了',\n                confirmButtonText: '確定取消',\n                reverseButtons: true,\n                customClass: {\n                    confirmButton: 'popupBtn confirmBtn',\n                    cancelButton: 'popupBtn cancelBtn'\n                }\n            }).then((result) => {\n                if (result.value) {\n                    swalWithBootstrapButtons.fire(\n                        '取消成功!',\n                        '期待在其他課程與你相見',\n                        'success'\n                    )\n                    userCancelBooking()\n                } else if (result.dismiss === Swal.DismissReason.cancel) {\n                    swalWithBootstrapButtons.fire(\n                        '太好了!',\n                        '記得來上課喔～',\n                    )\n                }\n            })\n        } else {\n            Swal.fire({\n                icon: 'warning',\n                title: '請先登入會員',\n            }).then(() => {\n                props.history.push('/login')\n            })\n        }\n    }\n\n    //課程彈跳視窗\n    function showCJumpWindow() {\n        Swal.fire({\n            width: 800,\n            title: props.userCourse.courseName,\n            imageUrl: props.userCourse.courseImg,\n            imageWidth: 400,\n            imageHeight: 300,\n            text: props.userCourse.courseIntroduce,\n        })\n    }\n\n    //教練彈跳視窗\n    function showEJumpWindow() {\n        Swal.fire({\n            width: 800,\n            title: props.userCourse.Ename,\n            imageUrl: props.userCourse.Eimg,\n            imageWidth: 400,\n            html: `<h4>證照：</h4></br>${props.userCourse.Elicense}<br/><br/><h4>專長：</h4></br>${props.userCourse.Eexpertise}`,\n        })\n    }\n\n    useEffect(() => {\n        props.getCoursesDataInAllUser()\n        props.getUserBooking()\n    }, [userBooking])\n\n    return (\n        <>\n            <ul className=\"userCoursesInfo\">\n                {/* {nowTime > newTime ? <div className=\"userCoursesInfoCover\"></div> : \"\"} */}\n                <li className=\"courseDayInUser\">{newD}</li>\n                <li className=\"courseTimeInUser\">{newT}</li>\n                <li className=\"courseNameInUser\" onClick={() => showCJumpWindow()}>{props.userCourse.courseName}</li>\n                <li className=\"courseCategoryInUser\">{props.userCourse.categoryName}</li>\n                <li className=\"coachNameInUser\" onClick={() => showEJumpWindow()}>{props.userCourse.Ename}</li>\n                <li className=\"userCourseBtn\">\n                    <div>\n                        <UserCourseUpdateBtn\n                            userBookingId={userBookingId}\n                            userConfirmUpdateBooking={userConfirmUpdateBooking}\n                            userCancelBooking={userCancelBooking}\n                            getThisBookingState={getThisBookingState}\n                            choose={props.choose}\n                            filterCoursesOfData={props.filterCoursesOfData}\n                            userCourseId={props.userCourseId}\n                        />\n                    </div>\n                </li>\n            </ul>\n        </>\n    )\n}\n//---------------\nconst mapStateToProps = createStructuredSelector({\n    currentUser: currentUserSelect,\n});\n\nexport default withRouter(connect(mapStateToProps)(UserMyCourses));\n  //---------------\n"]},"metadata":{},"sourceType":"module"}
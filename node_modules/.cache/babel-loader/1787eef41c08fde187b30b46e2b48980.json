{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Project-traning/project-wow-fit-fronted/src/component/Course-box/CourseBox.jsx\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./CourseBox.scss\";\nimport CourseBookingButton from \"../course-booking-button/CourseBookingButton\";\nimport Swal from \"sweetalert2\";\nimport Fade from 'react-reveal/Fade'; //---------------\n\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentUserSelect } from \"../../redux/user/user-selector\"; //---------------\n\nfunction CourseBox(props) {\n  //---------------\n  const {\n    currentUser\n  } = props; //該使用者的id\n\n  const currentUserId = currentUser ? currentUser.id : ''; //---------------\n\n  const [num, setNum] = useState([props.course.numberOfCourse]);\n  const [changeState, setChangeState] = useState(false);\n  const [changeState2, setChangeState2] = useState(false); // console.log( [props.course.numberOfCourse])\n  // console.log(currentUser)\n  //將現在時間的星期轉換成毫秒\n\n  const nowTime = Date.now(); //抓資料裡的課程時間(毫秒)\n\n  const getTimeInData = props.course.courseTime2;\n  let t = props.course.courseTime;\n  let newT = t.split(/[' ']/)[3]; // 該課程id\n\n  const getThisCourseId = props.course.courseId; // console.log(props.value)\n  //新增人數到資料庫\n\n  async function getAddNumFromData() {\n    const addNumPost = {\n      courseId: getThisCourseId\n    };\n    const req = new Request(\"http://localhost:5000/api/courses/addNumOfCourse\", {\n      method: 'POST',\n      body: JSON.stringify(addNumPost),\n      headers: new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      })\n    });\n    const res = await fetch(req);\n    const newData = await res.json();\n    return newData;\n  } //預約function\n\n\n  async function addBooking() {\n    const bookingPost = {\n      memberId: currentUserId,\n      courseId: getThisCourseId\n    };\n    const request = new Request(\"http://localhost:5000/api/courses/bookingData\", {\n      method: 'POST',\n      body: JSON.stringify(bookingPost),\n      headers: new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      })\n    });\n    await fetch(request); // getNumFromData()\n\n    props.getBookingData();\n    setChangeState(!changeState);\n  } //抓該會員預約過的課程資料\n\n\n  const thisUserCourseId = props.bookingData && props.bookingData.filter(i => i.memberId === currentUserId).map(p => p); //抓要取消的預約編號\n\n  const thisCanceled = thisUserCourseId && thisUserCourseId.filter(i => i.courseId === getThisCourseId).map(p => p.courseBookingId); // console.log(thisUserCourseId)\n  //取消預約\n\n  async function userCancelBooking() {\n    const updateBookingJson = {\n      bookingState: 0\n    };\n    const request = new Request(`http://localhost:5000/api/courses/bookingData/${thisCanceled}`, {\n      method: 'POST',\n      body: JSON.stringify(updateBookingJson),\n      headers: new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      })\n    });\n    await fetch(request);\n    props.getBookingData();\n    setChangeState2(!changeState2);\n  } //取消預約後減少人數\n\n\n  const getReduceNumFromData = useCallback(async () => {\n    const reduceNumJson = {\n      courseId: getThisCourseId\n    };\n    const req = new Request(`http://localhost:5000/api/courses/data`, {\n      method: 'POST',\n      body: JSON.stringify(reduceNumJson),\n      headers: new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      })\n    });\n    const res = await fetch(req);\n    const newData = await res.json(); // console.log(newData)\n\n    return newData;\n  }, [getThisCourseId]); // console.log(currentUser.length)\n  //確認預約視窗\n\n  function myConfirmAddBooking(addBooking) {\n    // let a = window.confirm(\"確定要預約此課程嗎?\")\n    if (currentUserId > 0) {\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: 'popupBtn confirmBtn',\n          cancelButton: 'popupBtn cancelBtn'\n        },\n        buttonsStyling: false\n      });\n      swalWithBootstrapButtons.fire({\n        title: `預定課程：${props.course.courseName}`,\n        html: `<h2>預定時間：${props.course.courseTime}</h2>`,\n        icon: 'question',\n        showCancelButton: true,\n        cancelButtonText: '取消',\n        confirmButtonText: '確定預約',\n        reverseButtons: true,\n        customClass: {\n          confirmButton: 'popupBtn confirmBtn',\n          cancelButton: 'popupBtn cancelBtn'\n        }\n      }).then(result => {\n        if (result.value) {\n          swalWithBootstrapButtons.fire('預約成功!', '記得來上課喔～', 'success');\n          addBooking();\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n          swalWithBootstrapButtons.fire('太可惜了...', '期待在其他課程與你相見');\n        }\n      });\n    } else {\n      Swal.fire({\n        icon: 'warning',\n        title: '請先登入會員'\n      }).then(() => {\n        props.history.push('/login');\n      });\n    }\n  } //確認取消視窗\n\n\n  function myConfirmCancelBooking(userCancelBooking) {\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'popupBtn confirmBtn',\n        cancelButton: 'popupBtn cancelBtn'\n      },\n      buttonsStyling: false\n    });\n    swalWithBootstrapButtons.fire({\n      title: `取消課程：${props.course.courseName}`,\n      html: `<h2>課程時間：${props.course.courseTime}</h2><br />取消後無法再次預約，確定取消嗎？`,\n      icon: 'question',\n      showCancelButton: true,\n      cancelButtonText: '不取消了',\n      confirmButtonText: '確定取消',\n      reverseButtons: true,\n      customClass: {\n        confirmButton: 'popupBtn confirmBtn',\n        cancelButton: 'popupBtn cancelBtn'\n      }\n    }).then(result => {\n      if (result.value) {\n        swalWithBootstrapButtons.fire('取消成功!', '期待在其他課程與你相見', 'success');\n        userCancelBooking();\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        swalWithBootstrapButtons.fire('太好了!', '記得來上課喔～');\n      }\n    });\n  } //已額滿按鈕\n\n\n  function displayFullBtn() {\n    if (thisUserCourseId.filter(i => i.courseId === getThisCourseId).length === 0) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        value: props.value,\n        className: \"fullBooking\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }\n      }, \"\\u5DF2\\u984D\\u6EFF\"));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        value: props.value,\n        className: \"alreadyBooked courseBtn\",\n        onClick: () => myConfirmCancelBooking(userCancelBooking),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }\n      }, \"\\u53D6\\u6D88\\u9810\\u7D04\"));\n    }\n  } //課程彈跳視窗\n\n\n  function showCJumpWindow() {\n    Swal.fire({\n      width: 700,\n      title: props.course.courseName,\n      imageUrl: props.course.courseImg,\n      imageWidth: 400,\n      imageHeight: 300,\n      text: props.course.courseIntroduce\n    });\n  } //教練彈跳視窗\n\n\n  function showEJumpWindow() {\n    Swal.fire({\n      width: 700,\n      title: props.course.Ename,\n      imageUrl: props.course.Eimg,\n      imageWidth: 400,\n      html: `<h4>證照：</h4></br>${props.course.Elicense}<br/><br/><h4>專長：</h4></br>${props.course.Eexpertise}`\n    });\n  }\n\n  useEffect(() => {\n    (async () => {\n      const getNumFunc = await getAddNumFromData();\n      setNum([getNumFunc.numberOfCourse]);\n    })(); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [changeState]);\n  useEffect(() => {\n    (async () => {\n      const getReduceNumFunc = await getReduceNumFromData();\n      setNum([getReduceNumFunc.numberOfCourse]);\n    })(); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [changeState2]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Fade, {\n    bottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"courseBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, getTimeInData <= nowTime ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"courseBoxCover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 49\n    }\n  }) : '', /*#__PURE__*/React.createElement(\"div\", {\n    className: \"courseName\",\n    onClick: () => showCJumpWindow(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, props.course.courseName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"courseTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, newT), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => showEJumpWindow(),\n    className: \"coachName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }, props.course.Ename), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  }, num.map(i => i), \"/\", props.course.courseQuoda), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }, +props.course.numberOfCourse >= +props.course.courseQuoda ? displayFullBtn() : /*#__PURE__*/React.createElement(CourseBookingButton, {\n    value: props.value,\n    bookingData: props.bookingData,\n    addBooking: addBooking,\n    userCancelBooking: userCancelBooking,\n    myConfirmAddBooking: myConfirmAddBooking,\n    myConfirmCancelBooking: myConfirmCancelBooking,\n    thisUserBookingId: props.thisUserBookingId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 29\n    }\n  })))));\n} //---------------\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: currentUserSelect\n});\nexport default withRouter(connect(mapStateToProps)(CourseBox)); //---------------","map":{"version":3,"sources":["/Users/Chris/Project-traning/project-wow-fit-fronted/src/component/Course-box/CourseBox.jsx"],"names":["React","useState","useEffect","useCallback","CourseBookingButton","Swal","Fade","connect","withRouter","createStructuredSelector","currentUserSelect","CourseBox","props","currentUser","currentUserId","id","num","setNum","course","numberOfCourse","changeState","setChangeState","changeState2","setChangeState2","nowTime","Date","now","getTimeInData","courseTime2","t","courseTime","newT","split","getThisCourseId","courseId","getAddNumFromData","addNumPost","req","Request","method","body","JSON","stringify","headers","Headers","res","fetch","newData","json","addBooking","bookingPost","memberId","request","getBookingData","thisUserCourseId","bookingData","filter","i","map","p","thisCanceled","courseBookingId","userCancelBooking","updateBookingJson","bookingState","getReduceNumFromData","reduceNumJson","myConfirmAddBooking","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","courseName","html","icon","showCancelButton","cancelButtonText","confirmButtonText","reverseButtons","then","result","value","dismiss","DismissReason","cancel","history","push","myConfirmCancelBooking","displayFullBtn","length","showCJumpWindow","width","imageUrl","courseImg","imageWidth","imageHeight","text","courseIntroduce","showEJumpWindow","Ename","Eimg","Elicense","Eexpertise","getNumFunc","getReduceNumFunc","courseQuoda","thisUserBookingId","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./CourseBox.scss\";\nimport CourseBookingButton from \"../course-booking-button/CourseBookingButton\";\nimport Swal from \"sweetalert2\";\nimport Fade from 'react-reveal/Fade';\n//---------------\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentUserSelect } from \"../../redux/user/user-selector\";\n//---------------\n\nfunction CourseBox(props) {\n\n    //---------------\n    const { currentUser } = props\n    //該使用者的id\n    const currentUserId = currentUser ? currentUser.id : ''\n    //---------------\n    const [num, setNum] = useState([props.course.numberOfCourse])\n    const [changeState, setChangeState] = useState(false)\n    const [changeState2, setChangeState2] = useState(false)\n    // console.log( [props.course.numberOfCourse])\n    // console.log(currentUser)\n\n    //將現在時間的星期轉換成毫秒\n    const nowTime = Date.now()\n    //抓資料裡的課程時間(毫秒)\n    const getTimeInData = props.course.courseTime2\n    let t = props.course.courseTime\n    let newT = t.split(/[' ']/)[3]\n    // 該課程id\n    const getThisCourseId = props.course.courseId\n// console.log(props.value)\n    //新增人數到資料庫\n    async function getAddNumFromData() {\n        const addNumPost = {\n            courseId: getThisCourseId,\n        }\n        const req = new Request(\"http://localhost:5000/api/courses/addNumOfCourse\", {\n            method: 'POST',\n            body: JSON.stringify(addNumPost),\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }),\n        })\n        const res = await fetch(req)\n        const newData = await res.json()\n        return newData\n    }\n\n    //預約function\n    async function addBooking() {\n        const bookingPost = {\n            memberId: currentUserId,\n            courseId: getThisCourseId\n        }\n        const request = new Request(\"http://localhost:5000/api/courses/bookingData\", {\n            method: 'POST',\n            body: JSON.stringify(bookingPost),\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }),\n        })\n        await fetch(request)\n        // getNumFromData()\n        props.getBookingData()\n        setChangeState(!changeState)\n    }\n\n    //抓該會員預約過的課程資料\n    const thisUserCourseId = props.bookingData && props.bookingData.filter(i => i.memberId === currentUserId).map(p => p)\n\n    //抓要取消的預約編號\n    const thisCanceled = thisUserCourseId && thisUserCourseId.filter(i => i.courseId === getThisCourseId).map(p => p.courseBookingId)\n    // console.log(thisUserCourseId)\n\n    //取消預約\n    async function userCancelBooking() {\n        const updateBookingJson = {\n            bookingState: 0\n        }\n        const request = new Request(`http://localhost:5000/api/courses/bookingData/${thisCanceled}`, {\n            method: 'POST',\n            body: JSON.stringify(updateBookingJson),\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }),\n        })\n        await fetch(request)\n        props.getBookingData()\n        setChangeState2(!changeState2)\n    }\n\n    //取消預約後減少人數\n    const getReduceNumFromData = useCallback(async()=>{\n        const reduceNumJson = {\n            courseId: getThisCourseId,\n        }\n        const req = new Request(`http://localhost:5000/api/courses/data`, {\n            method: 'POST',\n            body: JSON.stringify(reduceNumJson),\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }),\n        })\n        const res = await fetch(req)\n        const newData = await res.json()\n        // console.log(newData)\n        return newData\n    }, [getThisCourseId])\n// console.log(currentUser.length)\n    //確認預約視窗\n    function myConfirmAddBooking(addBooking) {\n        // let a = window.confirm(\"確定要預約此課程嗎?\")\n        if (currentUserId > 0) {\n            const swalWithBootstrapButtons = Swal.mixin({\n                customClass: {\n                    confirmButton: 'popupBtn confirmBtn',\n                    cancelButton: 'popupBtn cancelBtn'\n                },\n                buttonsStyling: false\n            })\n\n            swalWithBootstrapButtons.fire({\n                title: `預定課程：${props.course.courseName}`,\n                html: `<h2>預定時間：${props.course.courseTime}</h2>`,\n                icon: 'question',\n                showCancelButton: true,\n                cancelButtonText: '取消',\n                confirmButtonText: '確定預約',\n                reverseButtons: true,\n                customClass: {\n                    confirmButton: 'popupBtn confirmBtn',\n                    cancelButton: 'popupBtn cancelBtn'\n                }\n            }).then((result) => {\n                if (result.value) {\n                    swalWithBootstrapButtons.fire(\n                        '預約成功!',\n                        '記得來上課喔～',\n                        'success'\n                    )\n                    addBooking()\n                } else if (result.dismiss === Swal.DismissReason.cancel) {\n                    swalWithBootstrapButtons.fire(\n                        '太可惜了...',\n                        '期待在其他課程與你相見',\n                    )\n                }\n            })\n        } else {\n            Swal.fire({\n                icon: 'warning',\n                title: '請先登入會員',\n            }).then(() => {\n                props.history.push('/login')\n            })\n        }\n    }\n    //確認取消視窗\n    function myConfirmCancelBooking(userCancelBooking) {\n        const swalWithBootstrapButtons = Swal.mixin({\n            customClass: {\n                confirmButton: 'popupBtn confirmBtn',\n                cancelButton: 'popupBtn cancelBtn'\n            },\n            buttonsStyling: false\n        })\n\n        swalWithBootstrapButtons.fire({\n            title: `取消課程：${props.course.courseName}`,\n            html: `<h2>課程時間：${props.course.courseTime}</h2><br />取消後無法再次預約，確定取消嗎？`,\n            icon: 'question',\n            showCancelButton: true,\n            cancelButtonText: '不取消了',\n            confirmButtonText: '確定取消',\n            reverseButtons: true,\n            customClass: {\n                confirmButton: 'popupBtn confirmBtn',\n                cancelButton: 'popupBtn cancelBtn'\n            }\n        }).then((result) => {\n            if (result.value) {\n                swalWithBootstrapButtons.fire(\n                    '取消成功!',\n                    '期待在其他課程與你相見',\n                    'success'\n                )\n                userCancelBooking()\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\n                swalWithBootstrapButtons.fire(\n                    '太好了!',\n                    '記得來上課喔～',\n                )\n            }\n        })\n    }\n\n    //已額滿按鈕\n    function displayFullBtn() {\n        if (thisUserCourseId.filter(i => i.courseId === getThisCourseId).length === 0) {\n            return (\n                <>\n                    <button value={props.value} className=\"fullBooking\">已額滿</button>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <button value={props.value} className=\"alreadyBooked courseBtn\" onClick={() => myConfirmCancelBooking(userCancelBooking)}>取消預約</button>\n                </>\n            )\n        }\n    }\n\n    //課程彈跳視窗\n    function showCJumpWindow() {\n        Swal.fire({\n            width: 700,\n            title: props.course.courseName,\n            imageUrl: props.course.courseImg,\n            imageWidth: 400,\n            imageHeight: 300,\n            text: props.course.courseIntroduce,\n        })\n    }\n    //教練彈跳視窗\n    function showEJumpWindow() {\n        Swal.fire({\n            width: 700,\n            title: props.course.Ename,\n            imageUrl: props.course.Eimg,\n            imageWidth: 400,\n            html: `<h4>證照：</h4></br>${props.course.Elicense}<br/><br/><h4>專長：</h4></br>${props.course.Eexpertise}`,\n        })\n    }\n\n    useEffect(() => {\n        (async () => {\n            const getNumFunc = await getAddNumFromData()\n            setNum([getNumFunc.numberOfCourse])\n        })()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [changeState])\n\n    useEffect(() => {\n        (async () => {\n            const getReduceNumFunc = await getReduceNumFromData()\n            setNum([getReduceNumFunc.numberOfCourse])\n        })()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [changeState2])\n\n    return (\n        <>\n            <Fade bottom>\n                <div className=\"courseBox\">\n                    {getTimeInData <= nowTime ? <div className=\"courseBoxCover\"></div> : ''}\n                    <div className=\"courseName\" onClick={() => showCJumpWindow()}>{props.course.courseName}</div>\n                    <div className=\"courseTime\">{newT}</div>\n                    <div onClick={() => showEJumpWindow()} className=\"coachName\">\n                        {props.course.Ename}\n                    </div>\n                    <div>{num.map(i => (i))}/{props.course.courseQuoda}</div>\n                    <div>\n                        {+props.course.numberOfCourse >= +props.course.courseQuoda ? displayFullBtn() :\n                            <CourseBookingButton\n                                value={props.value}\n                                bookingData={props.bookingData}\n                                addBooking={addBooking}\n                                userCancelBooking={userCancelBooking}\n                                myConfirmAddBooking={myConfirmAddBooking}\n                                myConfirmCancelBooking={myConfirmCancelBooking}\n                                thisUserBookingId={props.thisUserBookingId}\n                            />\n                        }\n                    </div>\n                </div>\n            </Fade>\n        </>\n    );\n}\n\n//---------------\nconst mapStateToProps = createStructuredSelector({\n    currentUser: currentUserSelect,\n});\nexport default withRouter(connect(mapStateToProps)(CourseBox));\n  //---------------\n\n\n"]},"metadata":{},"sourceType":"module"}
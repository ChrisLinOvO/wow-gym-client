{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Project-traning/project-wow-fit-fronted/src/component/user-courses/UserCourses.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./UserCourses.scss\";\nimport UserMyCoursesList from \"../../component/user-my-courses-list/UserMyCoursesList\"; //---------------\n\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentUserSelect } from \"../../redux/user/user-selector\"; //---------------\n\nfunction UserCourses(props) {\n  const [userBooking, setUserBooking] = useState([]);\n  const [allCoursesOfThisUser, setAllCoursesOfThisUser] = useState([]);\n  const [filterCoursesOfData, setFilterCoursesOfData] = useState([]);\n  const [choose, setChoose] = useState(\"\");\n  const nowTime = Date.now(); //---------------\n\n  const {\n    currentUser\n  } = props; //該使用者的id\n\n  const currentUserId = currentUser ? currentUser.id : ''; //---------------\n  // console.log(currentUserId)\n  //Fetch 預約資料\n\n  async function getUserBooking() {\n    const request = new Request(\"http://localhost:5000/api/courses/bookingData\", {\n      method: 'GET',\n      body: JSON.stringify(),\n      headers: new Headers({\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      })\n    });\n    const response = await fetch(request);\n    const data = await response.json();\n    const booking = data && data.filter(i => i.memberId === currentUserId).map(p => p); // console.log(booking)\n\n    setUserBooking(booking); // setNumOfCourse(props.course.numberOfCourse)\n    // console.log(booking)\n  }\n\n  async function getCoursesDataInAllUser() {\n    // 開啟載入指\n    // 注意header資料格式要設定，伺服器才知道是json格式\n    const request = new Request(\"http://localhost:5000/api/courses/memberBookingData\", {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    });\n    const response = await fetch(request);\n    const data = await response.json();\n    const courseOfUser = data.coursesRow.filter(i => i.id === currentUserId).map(f => f);\n    setAllCoursesOfThisUser(courseOfUser);\n  }\n\n  const handleChange = e => {\n    if (e.target.value === \"預約的課程\") {\n      setChoose(\"預約的課程\");\n    } else if (e.target.value === \"已取消的課程\") {\n      setChoose(\"已取消的課程\");\n    } else {\n      setChoose(\"歷史課程\");\n    }\n  };\n\n  const filterCourse = function () {\n    if (choose === \"預約的課程\") {\n      // console.log('1')\n      const getBookingState = allCoursesOfThisUser && allCoursesOfThisUser.filter(i => +i.bookingState === +1 && i.courseTime2 > nowTime).map(p => p); // console.log(getBookingState)\n\n      setFilterCoursesOfData(getBookingState);\n    } else if (choose === \"已取消的課程\") {\n      const getBookingState2 = allCoursesOfThisUser && allCoursesOfThisUser.filter(i => +i.bookingState === +0 && i.courseTime2 > nowTime).map(p => p); // console.log(getBookingState2)\n\n      setFilterCoursesOfData(getBookingState2);\n    } else {\n      const getCourseTime = allCoursesOfThisUser && allCoursesOfThisUser.filter(i => i.courseTime2 < nowTime).map(p => p);\n      setFilterCoursesOfData(getCourseTime);\n    }\n  };\n\n  useEffect(() => {\n    getUserBooking();\n    filterCourse();\n    getCoursesDataInAllUser();\n  }, [choose]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userCourseContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userMyCoursesContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userCorsesBtnContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bookedBtn\",\n    onClick: e => handleChange(e),\n    value: \"預約的課程\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"\\u9810\\u7D04\\u7684\\u8AB2\\u7A0B\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"canceledBtn\",\n    onClick: e => handleChange(e),\n    value: \"已取消的課程\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"\\u5DF2\\u53D6\\u6D88\\u7684\\u8AB2\\u7A0B\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"finishedBtn\",\n    onClick: e => handleChange(e),\n    value: \"歷史紀錄\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"\\u6B77\\u53F2\\u7D00\\u9304\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"userCoursesTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, \"\\u8AB2\\u7A0B\\u65E5\\u671F\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, \"\\u8AB2\\u7A0B\\u6642\\u9593\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, \"\\u8AB2\\u7A0B\\u540D\\u7A31\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"\\u8AB2\\u7A0B\\u7A2E\\u985E\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, \"\\u6559\\u7DF4\\u540D\\u7A31\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, \"\\u9810\\u7D04\\u72C0\\u6CC1\")), /*#__PURE__*/React.createElement(UserMyCoursesList, {\n    userBooking: userBooking,\n    allCoursesOfThisUser: allCoursesOfThisUser,\n    setAllCoursesOfThisUser: setAllCoursesOfThisUser,\n    getCoursesDataInAllUser: getCoursesDataInAllUser,\n    filterCoursesOfData: filterCoursesOfData,\n    setFilterCoursesOfData: setFilterCoursesOfData,\n    getUserBooking: getUserBooking,\n    choose: choose,\n    currentUserId: currentUserId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }))));\n} //---------------\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: currentUserSelect\n});\nexport default withRouter(connect(mapStateToProps)(UserCourses)); //---------------","map":{"version":3,"sources":["/Users/Chris/Project-traning/project-wow-fit-fronted/src/component/user-courses/UserCourses.jsx"],"names":["React","useState","useEffect","UserMyCoursesList","connect","withRouter","createStructuredSelector","currentUserSelect","UserCourses","props","userBooking","setUserBooking","allCoursesOfThisUser","setAllCoursesOfThisUser","filterCoursesOfData","setFilterCoursesOfData","choose","setChoose","nowTime","Date","now","currentUser","currentUserId","id","getUserBooking","request","Request","method","body","JSON","stringify","headers","Headers","Accept","response","fetch","data","json","booking","filter","i","memberId","map","p","getCoursesDataInAllUser","courseOfUser","coursesRow","f","handleChange","e","target","value","filterCourse","getBookingState","bookingState","courseTime2","getBookingState2","getCourseTime","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport \"./UserCourses.scss\"\nimport UserMyCoursesList from \"../../component/user-my-courses-list/UserMyCoursesList\"\n//---------------\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentUserSelect } from \"../../redux/user/user-selector\";\n//---------------\n\n\nfunction UserCourses(props) {\n\n    const [userBooking, setUserBooking] = useState([])\n    const [allCoursesOfThisUser, setAllCoursesOfThisUser] = useState([])\n    const [filterCoursesOfData, setFilterCoursesOfData] = useState([])\n    const [choose, setChoose] = useState(\"\")\n    const nowTime = Date.now()\n    //---------------\n    const { currentUser } = props\n    //該使用者的id\n    const currentUserId = currentUser ? currentUser.id : ''\n    //---------------\n    // console.log(currentUserId)\n\n    //Fetch 預約資料\n    async function getUserBooking() {\n        const request = new Request(\"http://localhost:5000/api/courses/bookingData\", {\n            method: 'GET',\n            body: JSON.stringify(),\n            headers: new Headers({\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            }),\n        })\n        const response = await fetch(request)\n        const data = await response.json()\n\n        const booking = data && data.filter(i => i.memberId === currentUserId).map(p => p)\n        // console.log(booking)\n        setUserBooking(booking)\n        // setNumOfCourse(props.course.numberOfCourse)\n        // console.log(booking)\n    }\n\n    async function getCoursesDataInAllUser() {\n        // 開啟載入指\n        // 注意header資料格式要設定，伺服器才知道是json格式\n        const request = new Request(\"http://localhost:5000/api/courses/memberBookingData\", {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            }),\n        });\n\n        const response = await fetch(request);\n        const data = await response.json();\n        const courseOfUser = data.coursesRow.filter(i => i.id === currentUserId).map(f => f)\n        setAllCoursesOfThisUser(courseOfUser)\n    }\n\n    const handleChange = (e) => {\n        if (e.target.value === \"預約的課程\") {\n            setChoose(\"預約的課程\")\n        } else if (e.target.value === \"已取消的課程\") {\n            setChoose(\"已取消的課程\")\n        } else {\n            setChoose(\"歷史課程\")\n        }\n    }\n\n    const filterCourse = function () {\n        if (choose === \"預約的課程\") {\n            // console.log('1')\n            const getBookingState = allCoursesOfThisUser && allCoursesOfThisUser.filter(i => +i.bookingState === +1 && i.courseTime2 > nowTime).map(p => p)\n            // console.log(getBookingState)\n            setFilterCoursesOfData(getBookingState)\n        } else if (choose === \"已取消的課程\") {\n            const getBookingState2 = allCoursesOfThisUser && allCoursesOfThisUser.filter(i => +i.bookingState === +0 && i.courseTime2 > nowTime).map(p => p)\n            // console.log(getBookingState2)\n            setFilterCoursesOfData(getBookingState2)\n        } else {\n            const getCourseTime = allCoursesOfThisUser && allCoursesOfThisUser.filter(i => i.courseTime2 < nowTime).map(p=>p)\n            setFilterCoursesOfData(getCourseTime)\n        }\n    }\n\n    useEffect(() => {\n        getUserBooking()\n        filterCourse()\n        getCoursesDataInAllUser()\n    }, [choose])\n\n\n    return (\n        <>\n            <div className=\"userCourseContainer\">\n                <div className=\"userMyCoursesContainer\">\n                <div className=\"userCorsesBtnContainer\">\n                    <button className=\"bookedBtn\" onClick={(e) => handleChange(e)} value={\"預約的課程\"}>預約的課程</button>\n                    <button className=\"canceledBtn\" onClick={(e) => handleChange(e)} value={\"已取消的課程\"}>已取消的課程</button>\n                    <button className=\"finishedBtn\" onClick={(e) => handleChange(e)} value={\"歷史紀錄\"}>歷史紀錄</button>\n                </div>\n                    <ul className=\"userCoursesTitle\">\n                        <li>課程日期</li>\n                        <li>課程時間</li>\n                        <li>課程名稱</li>\n                        <li>課程種類</li>\n                        <li>教練名稱</li>\n                        <li>預約狀況</li>\n                    </ul>\n                    <UserMyCoursesList\n                        userBooking={userBooking}\n                        allCoursesOfThisUser={allCoursesOfThisUser}\n                        setAllCoursesOfThisUser={setAllCoursesOfThisUser}\n                        getCoursesDataInAllUser={getCoursesDataInAllUser}\n                        filterCoursesOfData={filterCoursesOfData}\n                        setFilterCoursesOfData={setFilterCoursesOfData}\n                        getUserBooking={getUserBooking}\n                        choose={choose}\n                        currentUserId={currentUserId}\n                    />\n                </div>\n            </div>\n        </>\n    )\n}\n//---------------\nconst mapStateToProps = createStructuredSelector({\n    currentUser: currentUserSelect,\n});\nexport default withRouter(connect(mapStateToProps)(UserCourses));\n//---------------"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Project-traning/project-wow-fit-fronted/src/component/employee-center-course-button/EmployeeCenterCourseButton.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentEmployeeSelect } from \"../../redux/employee/employee-selector\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport Swal from 'sweetalert2';\nimport EmployeeCentetModal from \"../employee-center-modal/employeeCentetModal\";\n\nfunction CourseButton({\n  currentEmployee,\n  itemID,\n  history\n}) {\n  const [modashow, setModashow] = useState(false);\n  const [courseid, setCourseid] = useState(\"\"); // const [test,settest]=useState(\"\");\n  //取得\n  //刪除\n\n  async function handleDelete() {\n    const request = new Request(`http://localhost:5000/api/courses/${itemID}`, {\n      method: \"DELETE\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    });\n    await fetch(request); //  settest(Math.random()*222)\n\n    window.location.reload();\n  } //載入\n\n\n  useEffect(() => {\n    const getCourseID = async () => {\n      const request = new Request(`http://localhost:5000/api/employeecenter/${currentEmployee.Eid}`, {\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"appliaction/json\"\n        })\n      });\n      const response = await fetch(request);\n      const data = await response.json();\n      setCourseid(data);\n    };\n\n    getCourseID();\n  }, [currentEmployee.Eid]); //改變\n\n  useEffect(() => {\n    setCourseid(courseid);\n  }, [courseid]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"course-edit\",\n    onClick: () => {\n      setModashow(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaEdit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"course-delete\",\n    onClick: () => {\n      Swal.fire({\n        title: '刪除課程',\n        text: \"確認課程是否刪除!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: '確定',\n        cancelButtonText: '取消'\n      }).then(result => {\n        if (result.value) {\n          Swal.fire('完成!', '已刪除課程!!', 'success');\n          handleDelete();\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaTrashAlt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })), modashow && /*#__PURE__*/React.createElement(EmployeeCentetModal, {\n    modashow: modashow,\n    setModashow: setModashow,\n    itemID: itemID,\n    courseid: courseid,\n    setCourseid: setCourseid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }));\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentEmployee: currentEmployeeSelect\n});\nexport default withRouter(connect(mapStateToProps)(CourseButton));","map":{"version":3,"sources":["/Users/Chris/Project-traning/project-wow-fit-fronted/src/component/employee-center-course-button/EmployeeCenterCourseButton.jsx"],"names":["React","useState","useEffect","connect","withRouter","createStructuredSelector","currentEmployeeSelect","FaEdit","FaTrashAlt","Swal","EmployeeCentetModal","CourseButton","currentEmployee","itemID","history","modashow","setModashow","courseid","setCourseid","handleDelete","request","Request","method","headers","Headers","Accept","fetch","window","location","reload","getCourseID","Eid","response","data","json","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentEmployeeSelect } from \"../../redux/employee/employee-selector\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport Swal from 'sweetalert2';\n\nimport EmployeeCentetModal from \"../employee-center-modal/employeeCentetModal\";\n\nfunction CourseButton({ currentEmployee, itemID,history }) {\n  const [modashow, setModashow] = useState(false);\n  const [courseid, setCourseid] = useState(\"\");\n  // const [test,settest]=useState(\"\");\n  //取得\n \n\n  //刪除\n  async function handleDelete() {\n      const request = new Request(\n        `http://localhost:5000/api/courses/${itemID}`,\n        {\n          method: \"DELETE\",\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          }),\n        }\n      );\n\n      await fetch(request);\n      //  settest(Math.random()*222)\n      window.location.reload();\n  }\n\n  //載入\n  useEffect(() => {\n    const getCourseID = async()=> {\n      const request = new Request(\n        `http://localhost:5000/api/employeecenter/${currentEmployee.Eid}`,\n        {\n          method: \"GET\",\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"appliaction/json\",\n          }),\n        }\n      );\n      const response = await fetch(request);\n      const data = await response.json();\n      setCourseid(data);\n    }\n    getCourseID();\n  }, [currentEmployee.Eid]);\n\n  //改變\n  useEffect(() => {\n    setCourseid(courseid);\n  }, [courseid]);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"course-edit\"\n        onClick={() => {\n          setModashow(true);\n        }}\n      >\n        <FaEdit />\n      </button>\n      <button\n        type=\"button\"\n        className=\"course-delete\"\n        onClick={() => {\n          Swal.fire({\n                    title: '刪除課程',\n                    text: \"確認課程是否刪除!\",\n                    icon: 'warning',\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    cancelButtonColor: '#d33',\n                    confirmButtonText: '確定',\n                    cancelButtonText: '取消'\n                  }).then((result) => {\n                    if (result.value) {\n                      Swal.fire(\n                        '完成!',\n                        '已刪除課程!!',\n                        'success'\n                      )\n                      handleDelete();\n                    \n                    }\n                  })\n          \n        }}\n      >\n        <FaTrashAlt />\n      </button>\n      {modashow && (\n        <EmployeeCentetModal\n          modashow={modashow}\n          setModashow={setModashow}\n          itemID={itemID}\n          courseid={courseid}\n          setCourseid={setCourseid}\n        />\n      )}\n    </>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentEmployee: currentEmployeeSelect,\n});\n\nexport default withRouter(connect(mapStateToProps)(CourseButton));"]},"metadata":{},"sourceType":"module"}
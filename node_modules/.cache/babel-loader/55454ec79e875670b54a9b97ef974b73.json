{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Project-traning/project-wow-fit-fronted/src/pages/courses-page/Courses.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Courses.scss\";\nimport CourseInformation from \"../../component/course-information/CourseInformation\";\nimport CourseSelector from \"../../component/course-selector/CourseSelector\";\nimport CourseCalender from \"../../component/course-calender/CourseCalender\"; // import WeekBar from \"../../component/week-bar/WeekBar\"\n//---------------\n\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentUserSelect } from \"../../redux/user/user-selector\"; // import Footer from \"../../component/footer/Footer\";\n//---------------\n\nfunction Courses(props) {\n  const [allCourses, setAllCourses] = useState([]);\n  const [choose, setChoose] = useState([]);\n  const [newCourses, setNewCourses] = useState([]);\n  const [newCategory, setNewCategory] = useState([]); // //原本資料庫的bookingData\n\n  const [bookingData, setBookingData] = useState(''); //---------------\n\n  const {\n    currentUser\n  } = props; //該使用者的id\n\n  const currentUserId = currentUser ? currentUser.id : ''; //---------------\n\n  async function getCoursesData() {\n    const response = await fetch(\"http://localhost:5000/api/courses/data\");\n    const data = await response.json();\n    setAllCourses(data);\n  }\n\n  async function getCategoryData() {\n    // 開啟載入指示\n    // 注意header資料格式要設定，伺服器才知道是json格式\n    const request = new Request(\"http://localhost:5000/api/category\", {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    });\n    const response = await fetch(request);\n    const data = await response.json(); // console.log(data)\n    // 設定資料\n\n    setChoose(data);\n  } // //Fetch 預約資料\n\n\n  async function getBookingData() {\n    const request = new Request(\"http://localhost:5000/api/courses/bookingData\", {\n      method: 'GET',\n      body: JSON.stringify(),\n      headers: new Headers({\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      })\n    });\n    const response = await fetch(request);\n    const data = await response.json();\n    setBookingData(data);\n  }\n\n  const handleChange = e => {\n    const oop = e.target.value;\n    const renewCourses = allCourses.coursesRow && allCourses.coursesRow.filter(course => course.courseCategoryName === oop);\n    setNewCourses(renewCourses);\n    setNewCategory(oop); // console.log('aa',{ ...choose })\n\n    if (!allCourses.coursesRow) {\n      const aa = { ...choose\n      };\n      setChoose(aa);\n    }\n  };\n\n  useEffect(() => {\n    getCoursesData();\n    getCategoryData();\n    getBookingData();\n    handleChange({\n      target: {\n        value: '請選擇課程種類'\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"coursesWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"coursesContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"courseBannerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"courseBanner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"categoryTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"\\u8AB2\\u7A0B\\u8CC7\\u8A0A Class information\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CourseInformation, {\n    choose: choose,\n    newCourses: newCourses,\n    newCategory: newCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CourseSelector, {\n    choose: choose,\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CourseCalender, {\n    newCourses: newCourses,\n    bookingData: bookingData,\n    getBookingData: getBookingData,\n    currentUserId: currentUserId,\n    getCoursesData: getCoursesData,\n    setNewCourses: setNewCourses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }))));\n} //---------------\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: currentUserSelect\n});\nexport default withRouter(connect(mapStateToProps)(Courses)); //---------------","map":{"version":3,"sources":["/Users/Chris/Project-traning/project-wow-fit-fronted/src/pages/courses-page/Courses.jsx"],"names":["React","useState","useEffect","CourseInformation","CourseSelector","CourseCalender","connect","withRouter","createStructuredSelector","currentUserSelect","Courses","props","allCourses","setAllCourses","choose","setChoose","newCourses","setNewCourses","newCategory","setNewCategory","bookingData","setBookingData","currentUser","currentUserId","id","getCoursesData","response","fetch","data","json","getCategoryData","request","Request","method","headers","Headers","Accept","getBookingData","body","JSON","stringify","handleChange","e","oop","target","value","renewCourses","coursesRow","filter","course","courseCategoryName","aa","height","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Courses.scss\";\nimport CourseInformation from \"../../component/course-information/CourseInformation\"\nimport CourseSelector from \"../../component/course-selector/CourseSelector\";\nimport CourseCalender from \"../../component/course-calender/CourseCalender\";\n// import WeekBar from \"../../component/week-bar/WeekBar\"\n\n//---------------\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentUserSelect } from \"../../redux/user/user-selector\";\n// import Footer from \"../../component/footer/Footer\";\n//---------------\n\n\nfunction Courses(props) {\n\n  const [allCourses, setAllCourses] = useState([])\n  const [choose, setChoose] = useState([])\n  const [newCourses, setNewCourses] = useState([])\n  const [newCategory, setNewCategory] = useState([])\n  // //原本資料庫的bookingData\n  const [bookingData, setBookingData] = useState('');\n\n  //---------------\n  const { currentUser } = props\n  //該使用者的id\n  const currentUserId = currentUser ? currentUser.id : ''\n  //---------------\n\n\n  async function getCoursesData() {\n\n    const response = await fetch(\"http://localhost:5000/api/courses/data\");\n    const data = await response.json();\n    setAllCourses(data)\n\n  }\n\n  async function getCategoryData() {\n    // 開啟載入指示\n    // 注意header資料格式要設定，伺服器才知道是json格式\n    const request = new Request(\"http://localhost:5000/api/category\", {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      }),\n    });\n\n    const response = await fetch(request);\n    const data = await response.json();\n\n    // console.log(data)\n    // 設定資料\n    setChoose(data);\n  }\n  // //Fetch 預約資料\n\n  async function getBookingData() {\n    const request = new Request(\"http://localhost:5000/api/courses/bookingData\", {\n      method: 'GET',\n      body: JSON.stringify(),\n      headers: new Headers({\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }),\n    })\n    const response = await fetch(request)\n    const data = await response.json()\n    setBookingData(data)\n\n  }\n  const handleChange = (e) => {\n\n    const oop = e.target.value\n    const renewCourses = allCourses.coursesRow && allCourses.coursesRow.filter(course => (course.courseCategoryName === oop))\n\n    setNewCourses(renewCourses)\n    setNewCategory(oop)\n\n    // console.log('aa',{ ...choose })\n    if (!allCourses.coursesRow) {\n      const aa = { ...choose }\n      setChoose(aa)\n    }\n  }\n\n  useEffect(() => {\n    getCoursesData()\n    getCategoryData()\n    getBookingData()\n    handleChange({ target: { value: '請選擇課程種類' } })\n\n  }, [])\n\n  return (\n    <>\n      <div className=\"coursesWrapper\">\n        <div className=\"coursesContainer\">\n          <div className=\"courseBannerContainer\">\n            <div className=\"courseBanner\">\n            </div>\n            <h1 className=\"categoryTitle\">課程資訊 Class information</h1>\n          </div>\n          <div className=\"container\">\n            <CourseInformation\n              choose={choose}\n              newCourses={newCourses}\n              newCategory={newCategory}\n            />\n            <CourseSelector\n              choose={choose}\n              handleChange={handleChange}\n            />\n            <div>\n              <CourseCalender\n                newCourses={newCourses}\n                bookingData={bookingData}\n                getBookingData={getBookingData}\n                currentUserId={currentUserId}\n                getCoursesData={getCoursesData}\n                setNewCourses={setNewCourses}\n              />\n            </div>\n          </div>\n          <div style={{ height: \"2rem\" }} />\n          {/* <Footer /> */}\n        </div>\n      </div>\n    </>\n  );\n}\n//---------------\nconst mapStateToProps = createStructuredSelector({\n  currentUser: currentUserSelect,\n});\n\nexport default withRouter(connect(mapStateToProps)(Courses));\n//---------------\n"]},"metadata":{},"sourceType":"module"}
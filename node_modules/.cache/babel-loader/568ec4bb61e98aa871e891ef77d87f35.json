{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Project-traning/project-wow-fit-fronted/src/pages/articles-preview-page/ArticlesPreview.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./ArticlesPreview.scss\";\nimport Moment from \"react-moment\";\nimport { AiOutlineLike } from \"react-icons/ai\";\nimport { AiFillLike } from \"react-icons/ai\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentUserSelect } from \"../../redux/user/user-selector\";\n\nconst ArticlesPreview = props => {\n  const {\n    currentUserData\n  } = props; //該使用者的id\n\n  const currentUserId = currentUserData ? currentUserData.id : ''; // console.log(currentUserId)\n\n  const currentUserImg = currentUserData ? currentUserData.memberImg : ''; // const currentUserNickname = currentUserData ? currentUserData.memberNickname : ''\n  // const currentUserNickname = currentUserData ? currentUserData.memberNickname : ''\n\n  const currentUserName = currentUserData ? currentUserData.memberName : ''; // console.log(currentUserImg)\n\n  const [Data, setData] = useState();\n  console.log(Data);\n  const [articleId, setArticleId] = useState(\"\");\n  const [memberId, setMemberId] = useState(currentUserId);\n  const [memberName, setmemberName] = useState(\"\"); // const [memberNickname, setMemberNickname] = useState(\"\")\n\n  const [content, setContent] = useState(\"\");\n  const [memberImg, setMemberImg] = useState(\"\");\n  const [comments, setComments] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [commentsNum, setCommentsNum] = useState(\"\");\n  const [articleLike, setArticleLike] = useState(\"\");\n  const [active, setActive] = useState(\"\");\n  useEffect(() => {\n    setMemberImg(currentUserImg);\n    setmemberName(currentUserName);\n    setMemberId(currentUserId);\n  }, [currentUserImg, currentUserName, currentUserId]); //取得文章資料\n\n  useEffect(() => {\n    const FetchData = async id => {\n      const result = await axios(`http://localhost:5000/api/articles/${id}`);\n      setData(result.data);\n      console.log(result.data);\n    };\n\n    FetchData(props.match.params.articleId);\n  }, [props.match.params.articleId, articleLike]); // console.log(props.match.params.articleId)\n  //傳送留言\n\n  async function addToSever(item) {\n    // 注意資料格式要設定，伺服器才知道是json格式\n    console.log(item);\n    const commentspost = axios.post(`http://localhost:5000/api/articles/postComments/:articleId`, {\n      method: \"POST\",\n      credentials: \"include\",\n      // 需傳送 Cookie 必須開啟\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }),\n      data: {\n        articleId: item.articleId,\n        memberId: item.memberId,\n        memberName: item.memberName,\n        content: item.content,\n        memberImg: item.memberImg\n      }\n    } // window.location.reload()\n    );\n    setText(commentspost);\n    setContent(\"\");\n  } //取得留言\n\n\n  async function getAddCommentsData() {\n    const request = new Request(`http://localhost:5000/api/articles/getComments/${props.match.params.articleId}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"appliaction/json\"\n      })\n    });\n    const response = await fetch(request);\n    const data = await response.json();\n    console.log(data); // 設定資料\n\n    setComments(data);\n  }\n\n  useEffect(() => {\n    getAddCommentsData();\n  }, [text]);\n  useEffect(() => {\n    setArticleId(props.match.params.articleId);\n  }, [articleId]); // console.log(props.match.params)\n  // 取得留言數\n\n  async function getCommentsNumber() {\n    const request = new Request(`http://localhost:5000/api/articles/getCommentsNumber/${props.match.params.articleId}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"appliaction/json\"\n      })\n    });\n    const response = await fetch(request);\n    const data = await response.json();\n    setCommentsNum(data[0].COUNT);\n  }\n\n  useEffect(() => {// console.log(comments);\n  }, [comments]);\n  useEffect(() => {\n    getCommentsNumber();\n  }, [comments]); //更新點讚數\n\n  async function postArticleLikeUpdate(articleId, flag) {\n    // 注意資料格式要設定，伺服器才知道是json格式\n    const articleLikeData = axios.post(`http://localhost:5000/api/articles/postArticleLikeUpdate`, {\n      articleId: articleId,\n      flag: flag\n    });\n    setArticleLike(articleLikeData);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, Data ? Data.map((list, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"articles-preview-container\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contentCard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"membar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"member-avatar\",\n    src: list.memberImg,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"membar-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, list.memberNickname), /*#__PURE__*/React.createElement(Moment, {\n    format: \"YYYY-MM-DD HH:mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, list.created_at)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body-mid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, list.articleTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-category-parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  }, list.categoryName)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, list.articleContent), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewImgBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"previewImg\",\n    src: list.articleImages,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-tag1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, list.tagName1), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-tag2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }, list.tagName2))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body-under\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"article-preview-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, list.flag !== 'Y' || !active && active !== 'Y' ? /*#__PURE__*/React.createElement(AiOutlineLike, {\n    onClick: () => {\n      postArticleLikeUpdate(articleId, 'Y');\n      setActive('Y');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(AiFillLike, {\n    onClick: () => {\n      postArticleLikeUpdate(articleId, 'N');\n      setActive('N');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, list.articleLike)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  }, \"\\u7559\\u8A00\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 19\n    }\n  }, commentsNum))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ArticleContentCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"articleCommentCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }, commentsNum, \"\\u5247\\u7559\\u8A00\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"membar-comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"member-avatar\",\n    src: currentUserImg,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewInputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"previewInput\",\n    type: \"text\",\n    value: content,\n    onChange: event => setContent(event.target.value),\n    placeholder: \"\\u5206\\u4EAB\\u4F60\\u7684\\u7559\\u8A00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"previewBtn\",\n    type: \"button\",\n    onClick: () => {\n      addToSever({\n        content,\n        articleId,\n        memberId,\n        memberName,\n        memberImg\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 23\n    }\n  }, \"\\u767C\\u4F48\"))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, \"\\u71B1\\u9580\\u7559\\u8A00\"), comments ? comments.map((list, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"article-comment\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"member-avatar-res\",\n    src: list.memberImg,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"member-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 29\n    }\n  }, list.memberNickname), /*#__PURE__*/React.createElement(Moment, {\n    className: \"time\",\n    format: \"YYYY-MM-DD HH:mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 29\n    }\n  }, list.created_at)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"commentText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 27\n    }\n  }, list.content)))) : \"\"))))) : \"\");\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUserData: currentUserSelect\n});\nexport default withRouter(connect(mapStateToProps)(ArticlesPreview));","map":{"version":3,"sources":["/Users/Chris/Project-traning/project-wow-fit-fronted/src/pages/articles-preview-page/ArticlesPreview.jsx"],"names":["React","useEffect","useState","connect","withRouter","axios","Moment","AiOutlineLike","AiFillLike","createStructuredSelector","currentUserSelect","ArticlesPreview","props","currentUserData","currentUserId","id","currentUserImg","memberImg","currentUserName","memberName","Data","setData","console","log","articleId","setArticleId","memberId","setMemberId","setmemberName","content","setContent","setMemberImg","comments","setComments","text","setText","commentsNum","setCommentsNum","articleLike","setArticleLike","active","setActive","FetchData","result","data","match","params","addToSever","item","commentspost","post","method","credentials","headers","Headers","Accept","getAddCommentsData","request","Request","response","fetch","json","getCommentsNumber","COUNT","postArticleLikeUpdate","flag","articleLikeData","map","list","index","memberNickname","created_at","articleTitle","categoryName","articleContent","articleImages","tagName1","tagName2","event","target","value","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\n\nimport axios from \"axios\"\nimport \"./ArticlesPreview.scss\"\nimport Moment from \"react-moment\"\nimport { AiOutlineLike } from \"react-icons/ai\"\nimport { AiFillLike } from \"react-icons/ai\"\n\n\nimport { createStructuredSelector } from \"reselect\"\nimport { currentUserSelect } from \"../../redux/user/user-selector\"\n\n\nconst ArticlesPreview = (props) => {\n\n  const { currentUserData } = props\n  //該使用者的id\n  const currentUserId = currentUserData ? currentUserData.id : ''\n  // console.log(currentUserId)\n\n  const currentUserImg = currentUserData ? currentUserData.memberImg : ''\n  // const currentUserNickname = currentUserData ? currentUserData.memberNickname : ''\n  // const currentUserNickname = currentUserData ? currentUserData.memberNickname : ''\n  const currentUserName = currentUserData ? currentUserData.memberName : ''\n  // console.log(currentUserImg)\n\n\n\n\n  const [Data, setData] = useState()\n  console.log(Data)\n  const [articleId, setArticleId] = useState(\"\")\n  const [memberId,setMemberId] = useState(currentUserId)\n  const [memberName,setmemberName] = useState(\"\")\n  // const [memberNickname, setMemberNickname] = useState(\"\")\n  const [content, setContent] = useState(\"\")\n  const [memberImg,setMemberImg] = useState(\"\")\n  const [comments, setComments] = useState(\"\")\n  const [text, setText] = useState(\"\")\n  const [commentsNum, setCommentsNum] = useState(\"\")\n  const [articleLike, setArticleLike] = useState(\"\")\n  const [active,setActive] = useState(\"\")\n\n  useEffect(() => {\n    setMemberImg(currentUserImg)\n    setmemberName(currentUserName)\n    setMemberId(currentUserId)\n  },[currentUserImg,currentUserName,currentUserId])\n  //取得文章資料\n  useEffect(() => {\n    const FetchData = async (id) => {\n      const result = await axios(`http://localhost:5000/api/articles/${id}`);\n      setData(result.data);\n      console.log(result.data)\n    };\n    FetchData(props.match.params.articleId);\n  }, [props.match.params.articleId, articleLike])\n\n\n  // console.log(props.match.params.articleId)\n  //傳送留言\n  async function addToSever(item) {\n    // 注意資料格式要設定，伺服器才知道是json格式\n    console.log(item);\n    const commentspost = axios.post(\n      `http://localhost:5000/api/articles/postComments/:articleId`,\n      {\n        method: \"POST\",\n        credentials: \"include\", // 需傳送 Cookie 必須開啟\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        }),\n        data: {\n          articleId: item.articleId,\n          memberId: item.memberId,\n          memberName: item.memberName,\n          content: item.content,\n          memberImg: item.memberImg,\n       \n        },\n      },\n      // window.location.reload()\n    );\n    setText(commentspost)\n    setContent(\"\")\n  }\n\n\n  //取得留言\n  async function getAddCommentsData() {\n    const request = new Request(\n      `http://localhost:5000/api/articles/getComments/${props.match.params.articleId}`,\n      {\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"appliaction/json\",\n        }),\n      }\n    );\n\n    const response = await fetch(request);\n    const data = await response.json();\n    console.log(data);\n    // 設定資料\n    setComments(data);\n \n  }\n  useEffect(() => {\n    getAddCommentsData();\n  }, [text]);\n  useEffect(() => {\n    setArticleId(props.match.params.articleId);\n  }, [articleId]);\n  // console.log(props.match.params)\n\n  // 取得留言數\n  async function getCommentsNumber() {\n    const request = new Request(\n      `http://localhost:5000/api/articles/getCommentsNumber/${props.match.params.articleId}`,\n      {\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"appliaction/json\",\n        }),\n      }\n    );\n\n    const response = await fetch(request);\n    const data = await response.json();\n    setCommentsNum(data[0].COUNT);\n  }\n\n  useEffect(() => {\n    // console.log(comments);\n  }, [comments]);\n  useEffect(() => {\n    getCommentsNumber();\n  }, [comments]);\n\n  //更新點讚數\n\n  async function postArticleLikeUpdate(articleId,flag) {\n    // 注意資料格式要設定，伺服器才知道是json格式\n\n    const articleLikeData = axios.post(\n      `http://localhost:5000/api/articles/postArticleLikeUpdate`,\n      {\n        articleId: articleId,\n        flag: flag\n      });\n    setArticleLike(articleLikeData)\n  }\n\n\n\n  return (\n    <>\n      {Data\n        ? Data.map((list, index) => (\n          <div className=\"articles-preview-container\" key={index}>\n            <div className=\"contentCard-container\" >\n              <div className=\"card-top\">\n                <div className=\"membar\">\n                  <img className=\"member-avatar\" src={list.memberImg} alt=\"\"></img>\n                  <div className=\"membar-info\">\n                    <h4>{list.memberNickname}</h4>\n                    <Moment format=\"YYYY-MM-DD HH:mm\">\n                      {list.created_at}\n                    </Moment>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-body-mid\">\n                <h1>{list.articleTitle}</h1>\n                <div className=\"card-category\">\n                  <div className=\"card-category-parent\">\n                    {list.categoryName}\n                  </div>\n                </div>\n                <p>{list.articleContent}</p>\n                <div className=\"previewImgBox\">\n                  <img className=\"previewImg\" src={list.articleImages} alt=\"\">\n                  </img></div>\n                <div className=\"card-tag\">\n                  <div className=\"card-tag1\">{list.tagName1}</div>\n                  <div className=\"card-tag2\">{list.tagName2}</div>\n                </div>\n              </div>\n              <div className=\"card-body-under\">\n                <div className=\"card-like\">\n                  <div className=\"article-preview-icon\">\n                    {list.flag !== 'Y' || (!active && active !=='Y')? \n                    <AiOutlineLike onClick={() => {\n                      postArticleLikeUpdate(\n                        articleId,\n                        'Y'\n                      );\n                      setActive('Y');\n                    }} />\n                    :  <AiFillLike  onClick={() => {\n                      postArticleLikeUpdate(\n                        articleId,\n                        'N'\n                      );\n                      setActive('N');\n                    }}/>}\n                  </div>\n                  <p>{list.articleLike}</p>\n                </div>\n                <div className=\"card-comment\">\n                  <p>留言</p>\n                  <p>{commentsNum}</p>\n                </div>\n                {/* <div className=\"card-watch\">\n                  <p>瀏覽人數</p>\n                  <p>800</p>\n                </div> */}\n              </div>\n              <div className=\"line\"></div>\n\n              <div className=\"ArticleContentCard\">\n\n                <div className=\"articleCommentCard\">\n                  <p>{commentsNum}則留言</p>\n                  <div className=\"membar-comment\">\n                \n                    <img className=\"member-avatar\" src={currentUserImg} alt=\"\"></img>\n                    <div className=\"previewInputBox\">\n                      <input\n                        className=\"previewInput\"\n                        type=\"text\"\n                        value={content}\n                        onChange={(event) => setContent(event.target.value)}\n                        placeholder=\"分享你的留言\" \n                      />\n\n                      <button\n                        className=\"previewBtn\"\n                        type=\"button\"\n                        onClick={() => {\n                          addToSever({\n                            content,\n                            articleId,\n                            memberId,\n                            memberName,\n                            memberImg,\n                          });\n                        }}\n                      >\n                        發佈\n                      </button>\n                    </div>\n                  </div>\n                  <p>熱門留言</p>\n                  {comments\n                    ? comments.map((list, index) => (\n                      <div className=\"article-comment\" key={index}>\n                        <img\n                          className=\"member-avatar-res\"\n                          src={list.memberImg} alt=\"\"\n                        ></img>\n                        <div className=\"member-info\">\n                          <div className=\"info1\">\n                            <h5>{list.memberNickname}</h5>\n                            <Moment className=\"time\" format=\"YYYY-MM-DD HH:mm\">\n                              {list.created_at}\n                            </Moment>\n                          </div>\n                          <div className=\"commentText\">{list.content}</div>\n                        </div>\n                      </div>\n                    ))\n                    : \"\"}\n                </div>\n              </div>\n            </div>\n          </div>\n        ))\n        : \"\"}\n    </>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  currentUserData: currentUserSelect,\n});\nexport default withRouter(connect(mapStateToProps)(ArticlesPreview))"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Project-traning/project-wow-fit-fronted/src/component/Order-CheckOutPage/CheckOutPage.jsx\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\nimport \"./CheckOutPage.scss\";\nimport { FaRegListAlt } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport city from \"../../API/AllData.json\";\nimport CartCheckOutButton from '../Order-cart-checkOut/CartCheckOutButton.jsx';\nimport Swal from \"sweetalert2\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { cartItemsSelect, favoriteItemsSelect, SelectTotal } from '../../redux/cart/cart-selector';\nimport { withRouter } from 'react-router-dom';\nimport { currentUserSelect } from \"../../redux/user/user-selector\";\n\nasync function addToSever(item) {\n  // 注意資料格式要設定，伺服器才知道是json格式\n  // console.log(item);\n  await axios.post(`http://localhost:5000/Orders/api/addCheckOutPage`, {\n    method: \"POST\",\n    credentials: \"include\",\n    // 需傳送 Cookie 必須開啟\n    headers: new Headers({\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }),\n    data: {\n      Name: item.Name,\n      City: item.Select,\n      District: item.District,\n      Mobile: item.Mobile,\n      Address: item.Address,\n      Email: item.Email,\n      recipientName: item.recipientName,\n      recipientSelect: item.recipientSelect,\n      recipientDistrict: item.recipientDistrict,\n      recipientMobile: item.recipientMobile,\n      recipientAddress: item.recipientAddress,\n      recipientEmail: item.recipientEmail,\n      Member: item.Member\n    }\n  });\n}\n\nasync function additemToSever(cartItems, Total, Member) {\n  // 注意資料格式要設定，伺服器才知道是json格式\n  // console.log(cartItems);\n  await axios.post(`http://localhost:5000/Orders/api/additem`, {\n    method: \"POST\",\n    credentials: \"include\",\n    // 需傳送 Cookie 必須開啟\n    headers: new Headers({\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }),\n    cartItems: cartItems,\n    Total,\n    Member\n  });\n}\n\nasync function addordersToSever(item) {\n  // 注意資料格式要設定，伺服器才知道是json格式\n  // console.log(cartItems);\n  await axios.post(`http://localhost:5000/Orders/api/orders`, {\n    method: \"POST\",\n    credentials: \"include\",\n    // 需傳送 Cookie 必須開啟\n    headers: new Headers({\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }),\n    orders: item\n  });\n}\n\nconst CheckOutPage = ({\n  cartItems,\n  history,\n  SelectTotal,\n  currentUserSelect\n}) => {\n  // console.log(history.location.state.pay)\n  const { ...id\n  } = {\n    currentUserSelect\n  }; // console.log(memberId)\n  // console.log(props.location.state)\n\n  const [Name, setName] = useState();\n  const [Select, setSelect] = useState(\"臺北市\");\n  const [District, setDistrict] = useState(\"中正區\");\n  const [Mobile, setMobile] = useState();\n  const [Address, setAddress] = useState();\n  const [Email, setEmail] = useState();\n  const [recipientName, setrecipientName] = useState(null);\n  const [recipientSelect, setrecipientSelect] = useState(null);\n  const [recipientDistrict, setrecipientDistrict] = useState(null);\n  const [recipientMobile, setrecipientMobile] = useState(null);\n  const [recipientAddress, setrecipientAddress] = useState(null);\n  const [recipientEmail, setrecipientEmail] = useState(null);\n  const [checkbox, setcheckbox] = useState(false);\n  const [Total, setTotal] = useState(0); //尚未連結會員\n\n  const [Member, setMember] = useState(10);\n  const [pay, setpay] = useState('現金'); // console.log(Total)\n\n  useEffect(() => {\n    setTotal(SelectTotal);\n  }, [SelectTotal]);\n  useEffect(() => {\n    setpay(history.location.state.pay);\n    console.log(pay);\n  }, [history.location.state.pay, pay]);\n  useEffect(() => {\n    setMember(10);\n  }, [currentUserSelect, id]); //////////\n\n  const next = async () => {\n    Swal.fire({\n      customClass: {\n        container: 'container-class',\n        popup: 'popup-class',\n        header: 'header-class',\n        title: 'title-class',\n        closeButton: 'close-button-class',\n        icon: 'icon-class',\n        image: 'image-class',\n        content: 'content-class',\n        input: 'input-class',\n        actions: 'actions-class',\n        confirmButton: 'confirm-button-class',\n        cancelButton: 'cancel-button-class',\n        footer: 'footer-class'\n      },\n      width: '333',\n      heigth: '258',\n      title: '確定資訊無誤',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm It!'\n    }).then(result => {\n      if (result.value) {\n        Swal.fire('訂單完成', 'Your Order has been Completed.', 'success', history.push(`/OrderCompleted`));\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CheckOuttitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-cotainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"title-ol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FaRegListAlt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, \"CheckOutPage\")), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, \"CheckOutPage\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"step1-active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"step2-active-extend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"step3-active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"CartListcontent\",\n    onSubmit: e => {\n      e.preventDefault();\n      addToSever({\n        Member,\n        Name,\n        Select,\n        District,\n        Mobile,\n        Address,\n        Email,\n        recipientName,\n        recipientSelect,\n        recipientDistrict,\n        recipientMobile,\n        recipientAddress,\n        recipientEmail\n      }, additemToSever(cartItems, Total, Member), addordersToSever({\n        pay,\n        Total,\n        Member\n      }), next(e));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrap-Checkoutpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, \"CHECKOUT\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, \"Billing details\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"content-list-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }, \" \\u6703\\u54E1\\u7DE8\\u865F\\uFF1A\", Member), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"content-list-detail-input\",\n    onChange: event => setName(event.target.value),\n    type: \"text\",\n    id: \"user_name\",\n    name: \"name\",\n    placeholder: \"\\u8ACB\\u8F38\\u5165\\u59D3\\u540D\",\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    className: \"content-list-detail-select\",\n    onChange: event => setSelect(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 33\n    }\n  }, city.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.CityName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 41\n    }\n  }, item.CityName))), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"content-list-detail-select\",\n    name: \"district\",\n    onChange: event => setDistrict(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 33\n    }\n  }, city.filter(i => i.CityName === Select).map(i => i.AreaList.map((i, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: i.AreaName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 49\n    }\n  }, i.AreaName))))), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => setAddress(event.target.value),\n    className: \"content-list-detail-input\",\n    type: \"text\",\n    name: \"address\",\n    placeholder: \"\\u8ACB\\u8F38\\u5165\\u5730\\u5740\",\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => setMobile(event.target.value),\n    className: \"content-list-detail-input\",\n    type: \"text\",\n    id: \"tel\",\n    name: \"mobile\",\n    placeholder: \"\\u8ACB\\u8F38\\u5165\\u624B\\u6A5F\\u865F\\u78BC\",\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => setEmail(event.target.value),\n    className: \"content-list-detail-input\",\n    type: \"text\",\n    id: \"email\",\n    name: \"mail\",\n    placeholder: \"\\u8ACB\\u8F38\\u5165E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrap-Checkoutpage-recipient-district\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipient-district-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => setcheckbox(event.target.checked),\n    className: \"content-list-detail-input\",\n    type: \"checkbox\",\n    id: \"recipient-district-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 33\n    }\n  }, \"Ship to a different address?\")), checkbox ? /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"content-list-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => setrecipientName(event.target.value),\n    className: \"content-list-detail-input\",\n    type: \"text\",\n    id: \"recipient-user_name\",\n    name: \"recipient-name\",\n    placeholder: \"\\u8ACB\\u8F38\\u5165\\u59D3\\u540D\",\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: event => setrecipientSelect(event.target.value),\n    className: \"content-list-detail-select\",\n    vlaue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 41\n    }\n  }, city.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.CityName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 49\n    }\n  }, item.CityName))), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: event => setrecipientDistrict(event.target.value),\n    className: \"content-list-detail-select\",\n    name: \"recipient-district\",\n    vlaue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 41\n    }\n  }, recipientSelect == null ? city.filter(i => i.CityName === \"臺北市\").map(i => i.AreaList.map((i, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: i.AreaName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 61\n    }\n  }, i.AreaName))) : city.filter(i => i.CityName === recipientSelect).map(i => i.AreaList.map((i, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: i.AreaName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 61\n    }\n  }, i.AreaName))))), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => setrecipientMobile(event.target.value),\n    className: \"content-list-detail-input\",\n    type: \"text\",\n    id: \"recipient-tel\",\n    name: \"recipient-mobile\",\n    placeholder: \"\\u8ACB\\u8F38\\u5165\\u624B\\u6A5F\\u865F\\u78BC\",\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => setrecipientAddress(event.target.value),\n    className: \"content-list-detail-input\",\n    type: \"text\",\n    name: \"recipient-address\",\n    placeholder: \"\\u8ACB\\u8F38\\u5165\\u5730\\u5740\",\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => setrecipientEmail(event.target.value),\n    className: \"content-list-detail-input\",\n    type: \"text\",\n    id: \"recipient-email\",\n    name: \"recipient-mail\",\n    placeholder: \"\\u8ACB\\u8F38\\u5165E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 37\n    }\n  })) : \"\")), /*#__PURE__*/React.createElement(CartCheckOutButton, {\n    additemToSever: additemToSever,\n    addToSever: addToSever,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: cartItemsSelect,\n  cartFavoriteItems: favoriteItemsSelect,\n  SelectTotal: SelectTotal,\n  currentUserSelect: currentUserSelect\n});\nexport default withRouter(connect(mapStateToProps)(CheckOutPage));","map":{"version":3,"sources":["/Users/Chris/Project-traning/project-wow-fit-fronted/src/component/Order-CheckOutPage/CheckOutPage.jsx"],"names":["React","useState","useEffect","FaRegListAlt","axios","city","CartCheckOutButton","Swal","connect","createStructuredSelector","cartItemsSelect","favoriteItemsSelect","SelectTotal","withRouter","currentUserSelect","addToSever","item","post","method","credentials","headers","Headers","Accept","data","Name","City","Select","District","Mobile","Address","Email","recipientName","recipientSelect","recipientDistrict","recipientMobile","recipientAddress","recipientEmail","Member","additemToSever","cartItems","Total","addordersToSever","orders","CheckOutPage","history","id","setName","setSelect","setDistrict","setMobile","setAddress","setEmail","setrecipientName","setrecipientSelect","setrecipientDistrict","setrecipientMobile","setrecipientAddress","setrecipientEmail","checkbox","setcheckbox","setTotal","setMember","pay","setpay","location","state","console","log","next","fire","customClass","container","popup","header","title","closeButton","icon","image","content","input","actions","confirmButton","cancelButton","footer","width","heigth","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","push","e","preventDefault","event","target","map","index","CityName","filter","i","AreaList","AreaName","checked","mapStateToProps","cartFavoriteItems"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\nimport \"./CheckOutPage.scss\";\nimport { FaRegListAlt } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport city from \"../../API/AllData.json\";\nimport CartCheckOutButton from '../Order-cart-checkOut/CartCheckOutButton.jsx'\nimport Swal from \"sweetalert2\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { cartItemsSelect, favoriteItemsSelect, SelectTotal } from '../../redux/cart/cart-selector';\nimport { withRouter } from 'react-router-dom';\nimport { currentUserSelect } from \"../../redux/user/user-selector\";\n\n\n\n\nasync function addToSever(item) {\n    // 注意資料格式要設定，伺服器才知道是json格式\n    // console.log(item);\n    await axios.post(`http://localhost:5000/Orders/api/addCheckOutPage`, {\n        method: \"POST\",\n        credentials: \"include\", // 需傳送 Cookie 必須開啟\n        headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        }),\n        data: {\n            Name: item.Name,\n            City: item.Select,\n            District: item.District,\n            Mobile: item.Mobile,\n            Address: item.Address,\n            Email: item.Email,\n            recipientName: item.recipientName,\n            recipientSelect: item.recipientSelect,\n            recipientDistrict: item.recipientDistrict,\n            recipientMobile: item.recipientMobile,\n            recipientAddress: item.recipientAddress,\n            recipientEmail: item.recipientEmail,\n            Member: item.Member\n\n        },\n    });\n\n\n}\nasync function additemToSever(cartItems, Total, Member) {\n    // 注意資料格式要設定，伺服器才知道是json格式\n    // console.log(cartItems);\n    await axios.post(`http://localhost:5000/Orders/api/additem`, {\n        method: \"POST\",\n        credentials: \"include\", // 需傳送 Cookie 必須開啟\n        headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        }),\n        cartItems: cartItems, Total, Member\n    });\n\n}\n\nasync function addordersToSever(item) {\n    // 注意資料格式要設定，伺服器才知道是json格式\n    // console.log(cartItems);\n    await axios.post(`http://localhost:5000/Orders/api/orders`, {\n        method: \"POST\",\n        credentials: \"include\", // 需傳送 Cookie 必須開啟\n        headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        }),\n        orders: item\n    });\n}\n\n\nconst CheckOutPage = ({ cartItems, history, SelectTotal, currentUserSelect }) => {\n    // console.log(history.location.state.pay)\n    const { ...id } = { currentUserSelect }\n    // console.log(memberId)\n    // console.log(props.location.state)\n    const [Name, setName] = useState();\n    const [Select, setSelect] = useState(\"臺北市\");\n    const [District, setDistrict] = useState(\"中正區\");\n    const [Mobile, setMobile] = useState();\n    const [Address, setAddress] = useState();\n    const [Email, setEmail] = useState();\n    const [recipientName, setrecipientName] = useState(null);\n    const [recipientSelect, setrecipientSelect] = useState(null);\n    const [recipientDistrict, setrecipientDistrict] = useState(null);\n    const [recipientMobile, setrecipientMobile] = useState(null);\n    const [recipientAddress, setrecipientAddress] = useState(null);\n    const [recipientEmail, setrecipientEmail] = useState(null);\n    const [checkbox, setcheckbox] = useState(false);\n    const [Total, setTotal] = useState(0)\n    //尚未連結會員\n    const [Member, setMember] = useState(10)\n    const [pay, setpay] = useState('現金')\n\n    // console.log(Total)\n    useEffect(() => {\n        setTotal(SelectTotal)\n    }, [SelectTotal])\n    useEffect(() => {\n        setpay(history.location.state.pay)\n        console.log(pay)\n    }, [history.location.state.pay, pay])\n\n    useEffect(() => {\n        setMember(10)\n    }, [currentUserSelect, id])\n    //////////\n\n\n\n\n    const next = async () => {\n        Swal.fire({\n            customClass: {\n                container: 'container-class',\n                popup: 'popup-class',\n                header: 'header-class',\n                title: 'title-class',\n                closeButton: 'close-button-class',\n                icon: 'icon-class',\n                image: 'image-class',\n                content: 'content-class',\n                input: 'input-class',\n                actions: 'actions-class',\n                confirmButton: 'confirm-button-class',\n                cancelButton: 'cancel-button-class',\n                footer: 'footer-class'\n            },\n            width: '333',\n            heigth: '258',\n            title: '確定資訊無誤',\n            icon: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Confirm It!'\n        }).then((result) => {\n            if (result.value) {\n                Swal.fire(\n                    '訂單完成',\n                    'Your Order has been Completed.',\n                    'success',\n                    history.push(`/OrderCompleted`)\n                )\n            }\n        })\n\n\n    }\n\n\n    return (\n        <>\n            <div className=\"CheckOuttitle\">\n                <div className=\"title-cotainer\">\n                    <ol className=\"title-ol\">\n                        <li className=\"icon\">\n                            <FaRegListAlt />\n                        </li>\n                        <li>CheckOutPage</li>\n                    </ol>\n                    <h3>CheckOutPage</h3>\n                </div>\n            </div>\n            <div className=\"container\">\n                <ul className=\"step\">\n                    <li className=\"step1-active\"></li>\n                    <li className=\"step2-active-extend\"></li>\n                    <li className=\"step3-active\"></li>\n                </ul>\n                <form\n                    className=\"CartListcontent\"\n                    onSubmit={(e) => {\n                        e.preventDefault()\n                        addToSever({\n                            Member,\n                            Name,\n                            Select,\n                            District,\n                            Mobile,\n                            Address,\n                            Email,\n                            recipientName,\n                            recipientSelect,\n                            recipientDistrict,\n                            recipientMobile,\n                            recipientAddress,\n                            recipientEmail,\n                        }, additemToSever(cartItems, Total, Member), (addordersToSever({ pay, Total, Member })), next(e))\n                    }}\n                >\n                    <div className=\"content-wrap-Checkoutpage\">\n                        <h3>CHECKOUT</h3>\n                        <span className=\"content-list-title\">Billing details</span>\n                        <ul className=\"content-list-detail\">\n                            <span> 會員編號：{Member}</span>\n                            <input\n                                className=\"content-list-detail-input\"\n                                onChange={(event) => setName(event.target.value)}\n                                type=\"text\"\n                                id=\"user_name\"\n                                name=\"name\"\n                                placeholder=\"請輸入姓名\"\n                                required=\"required\"\n                            />\n                            <div className=\"detail-select\">\n                                <select\n                                    name=\"city\"\n                                    className=\"content-list-detail-select\"\n                                    onChange={(event) => setSelect(event.target.value)}\n                                >\n                                    {city.map((item, index) => (\n                                        <option key={index} value={item.CityName}>\n                                            {item.CityName}\n                                        </option>\n                                    ))}\n                                </select>\n                                <select\n                                    className=\"content-list-detail-select\"\n                                    name=\"district\"\n                                    onChange={(event) => setDistrict(event.target.value)}\n                                >\n                                    {city\n                                        .filter((i) => i.CityName === Select)\n                                        .map((i) =>\n                                            i.AreaList.map((i, index) => (\n                                                <option key={index} value={i.AreaName}>\n                                                    {i.AreaName}\n                                                </option>\n                                            ))\n                                        )}\n                                </select>\n                            </div>\n                            <input\n                                onChange={(event) => setAddress(event.target.value)}\n                                className=\"content-list-detail-input\"\n                                type=\"text\"\n                                name=\"address\"\n                                placeholder=\"請輸入地址\"\n                                required=\"required\"\n                            />\n                            <input\n                                onChange={(event) => setMobile(event.target.value)}\n                                className=\"content-list-detail-input\"\n                                type=\"text\"\n                                id=\"tel\"\n                                name=\"mobile\"\n                                placeholder=\"請輸入手機號碼\"\n                                required=\"required\"\n                            ></input>\n\n                            <input\n                                onChange={(event) => setEmail(event.target.value)}\n                                className=\"content-list-detail-input\"\n                                type=\"text\"\n                                id=\"email\"\n                                name=\"mail\"\n                                placeholder=\"請輸入E-mail\"\n                            />\n                        </ul>\n                        <div className=\"content-wrap-Checkoutpage-recipient-district\">\n                            <div className=\"recipient-district-input\">\n                                <input\n                                    onChange={(event) => setcheckbox(event.target.checked)}\n                                    className=\"content-list-detail-input\"\n                                    type=\"checkbox\"\n                                    id=\"recipient-district-input\"\n                                />\n                                <h3>Ship to a different address?</h3>\n                            </div>\n                            {checkbox ? (\n                                <ul className=\"content-list-detail\">\n                                    <input\n                                        onChange={(event) => setrecipientName(event.target.value)}\n                                        className=\"content-list-detail-input\"\n                                        type=\"text\"\n                                        id=\"recipient-user_name\"\n                                        name=\"recipient-name\"\n                                        placeholder=\"請輸入姓名\"\n                                        required=\"required\"\n                                    />\n                                    <div className=\"detail-select\">\n                                        <select\n                                            onChange={(event) =>\n                                                setrecipientSelect(event.target.value)\n                                            }\n                                            className=\"content-list-detail-select\"\n                                            vlaue=\"\"\n                                        >\n                                            {city.map((item, index) => (\n                                                <option key={index} value={item.CityName}>\n                                                    {item.CityName}\n                                                </option>\n                                            ))}\n                                        </select>\n                                        <select\n                                            onChange={(event) =>\n                                                setrecipientDistrict(event.target.value)\n                                            }\n                                            className=\"content-list-detail-select\"\n                                            name=\"recipient-district\"\n                                            vlaue=\"\"\n                                        >\n                                            {recipientSelect == null\n                                                ? city\n                                                    .filter((i) => i.CityName === \"臺北市\")\n                                                    .map((i) =>\n                                                        i.AreaList.map((i, index) => (\n                                                            <option key={index} value={i.AreaName}>\n                                                                {i.AreaName}\n                                                            </option>\n                                                        ))\n                                                    )\n                                                : city\n                                                    .filter((i) => i.CityName === recipientSelect)\n                                                    .map((i) =>\n                                                        i.AreaList.map((i, index) => (\n                                                            <option key={index} value={i.AreaName}>\n                                                                {i.AreaName}\n                                                            </option>\n                                                        ))\n                                                    )}\n                                        </select>\n                                    </div>\n                                    <input\n                                        onChange={(event) => setrecipientMobile(event.target.value)}\n                                        className=\"content-list-detail-input\"\n                                        type=\"text\"\n                                        id=\"recipient-tel\"\n                                        name=\"recipient-mobile\"\n                                        placeholder=\"請輸入手機號碼\"\n                                        required=\"required\"\n                                    ></input>\n                                    <input\n                                        onChange={(event) =>\n                                            setrecipientAddress(event.target.value)\n                                        }\n                                        className=\"content-list-detail-input\"\n                                        type=\"text\"\n                                        name=\"recipient-address\"\n                                        placeholder=\"請輸入地址\"\n                                        required=\"required\"\n                                    />\n                                    <input\n                                        onChange={(event) => setrecipientEmail(event.target.value)}\n                                        className=\"content-list-detail-input\"\n                                        type=\"text\"\n                                        id=\"recipient-email\"\n                                        name=\"recipient-mail\"\n                                        placeholder=\"請輸入E-mail\"\n                                    />\n                                </ul>\n                            ) : (\n                                    \"\"\n                                )}\n                        </div>\n                    </div>\n                    <CartCheckOutButton additemToSever={additemToSever} addToSever={addToSever} />\n                </form>\n            </div>\n        </>\n    );\n};\n\n\nconst mapStateToProps = createStructuredSelector({\n\n    cartItems: cartItemsSelect,\n    cartFavoriteItems: favoriteItemsSelect,\n    SelectTotal: SelectTotal,\n    currentUserSelect: currentUserSelect\n\n});\n\nexport default withRouter(connect(mapStateToProps)(CheckOutPage))"]},"metadata":{},"sourceType":"module"}